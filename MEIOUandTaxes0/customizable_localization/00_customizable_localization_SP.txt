#AVIALABLE CUSTOM LOCALISATION KEYS
#When adding new custom loc keys, add them to the appropriate category (or add a new one) and describe them. Name the strings "String_X" where x is its content.
# To not display anything, you can use 'localisation_key = ""'
# Please add one example sentence for each key.

#As this list grow organize with categories.
#Current loc keys in this file:



################################
###   Rulers // Dirigentes   ###
################################

# Ex: "[the] ruler" => "[el] rey/[la] reina"
defined_text = {
	name = GetellaDir
	text = {
		localisation_key = string_el_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			is_female = yes
		}
	}
}
# Ex: "[The] ruler" => "[El] rey/[La] reina"
defined_text = {
	name = GetElLaDir
	text = {
		localisation_key = string_El_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			is_female = yes
		}
	}
}


# Ex: "[he/she] is" => "[él/ella] es"
defined_text = {
	name = GetelellaDir
	text = {
		localisation_key = string_el2_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_ella_SP
		trigger = {
			is_female = yes
		}
	}
}
# Ex. "[He/She] is" => "[Él/Ella] es"
defined_text = {
	name = GetElEllaDir
	text = {
		localisation_key = string_El2_cap_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_Ella_cap_SP
		trigger = {
			is_female = yes
		}
	}
}


# Ex: "[of the] ruler" => "[del] rey/[de la] reina"
defined_text = {
	name = GetdeldelaDir
	text = {
		localisation_key = string_del_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_dela_SP
		trigger = {
			is_female = yes
		}
	}
}
# Ex: "[Of the] ruler" => "[Del] rey/[De la] reina"
defined_text = {
	name = GetDelDelaDir
	text = {
		localisation_key = string_Del_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_Dela_SP
		trigger = {
			is_female = yes
		}
	}
}


# Ex: "[for the] ruler" => "[al] rey/[a la] reina"
defined_text = {
	name = GetalalaDir
	text = {
		localisation_key = string_al_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_ala_SP
		trigger = {
			is_female = yes
		}
	}
}
# Ex: "[For the] ruler" => "[Al] rey/[A la] reina"
defined_text = {
	name = GetAlAlaDir
	text = {
		localisation_key = string_Al_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_Ala_SP
		trigger = {
			is_female = yes
		}
	}
}


# Ex: "magnificient" => "magnífic[o]/magnífic[a]"
defined_text = {
	name = GetoaDir
	text = {
		localisation_key = string_o_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_a_SP
		trigger = {
			is_female = yes
		}
	}
}


# --e/--a # TODO: find an example
defined_text = {
	name = GeteaDir
	text = {
		localisation_key = string_e_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_a_SP
		trigger = {
			is_female = yes
		}
	}
}


# Ex: "Spanish" => "español[ø]/español[a]"
defined_text = {
	name = GetXaDir
	text = {
		localisation_key = string_X_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_a_SP
		trigger = {
			is_female = yes
		}
	}
}


# Ex: "stubborn" => "cabez[ón]/cabez[ona]
defined_text = {
	name = GetononaDir
	text = {
		localisation_key = string_on_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_ona_SP
		trigger = {
			is_female = yes
		}
	}
}


# Ex: "---" => "---[ín]/---[ina] # TODO: find an example
defined_text = {
	name = GetininaDir
	text = {
		localisation_key = string_in_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_ina_SP
		trigger = {
			is_female = yes
		}
	}
}


# Ex: "say [him/her]" => "decir[lo/la]" # TODO: find a better example
defined_text = {
	name = GetlolaDir
	text = {
		localisation_key = string_lo_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			is_female = yes
		}
	}
}
# Ex: "Say [him/her]" => "[Lo/La] decir" # TODO: find a better example
defined_text = {
	name = GetLoLaDir
	text = {
		localisation_key = string_Lo_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			is_female = yes
		}
	}
}


# Ex: "say [him/her]" => "decir[le/la]" # TODO: find a better example
defined_text = {
	name = GetlelaDir
	text = {
		localisation_key = string_le_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			is_female = yes
		}
	}
}
# Ex: "Say [him/her]" => "[Le/La] decir" # TODO: find a better example
defined_text = {
	name = GetLeLaDir
	text = {
		localisation_key = string_Le_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			is_female = yes
		}
	}
}


# Ex: "French" => "franc[és/esa]"
defined_text = {
	name = GetesesaDir
	text = {
		localisation_key = string_es_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_esa_SP
		trigger = {
			is_female = yes
		}
	}
}



##############################
###   Heirs // Herederos   ###
##############################

# Ex: "[the] prince(ss)" => "[el] príncipe/[la] princessa"
defined_text = {
	name = GetellaHer
	text = {
		localisation_key = string_el_SP
		trigger = {
			has_female_heir = no
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			has_female_heir = yes
		}
	}
}
# Ex: "[The] prince(ss)" => "[El] príncipe/[La] princessa"
defined_text = {
	name = GetElLaHer
	text = {
		localisation_key = string_El_SP
		trigger = {
			has_female_heir = no
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			has_female_heir = yes
		}
	}
}


# Ex: "[he/she] is" => "[él/ella] es"
defined_text = {
	name = GetelellaHer
	text = {
		localisation_key = string_el2_SP
		trigger = {
			has_female_heir = no
		}
	}
	text = {
		localisation_key = string_ella_SP
		trigger = {
			has_female_heir = yes
		}
	}
}
# Ex. "[He/She] is" => "[Él/Ella] es"
defined_text = {
	name = GetElEllaHer
	text = {
		localisation_key = string_El2_cap_SP
		trigger = {
			has_female_heir = no
		}
	}
	text = {
		localisation_key = string_Ella_cap_SP
		trigger = {
			has_female_heir = yes
		}
	}
}


# Ex: "[of the] prince(ss)" => "[del] príncipe/[de la] princessa"
defined_text = {
	name = GetdeldelaHer
	text = {
		localisation_key = string_del_SP
		trigger = {
			has_female_heir = no
		}
	}
	text = {
		localisation_key = string_dela_SP
		trigger = {
			has_female_heir = yes
		}
	}
}
# Ex: "[Of the] prince" => "[Del] príncipe/[De la] princessa"
defined_text = {
	name = GetDelDelaHer
	text = {
		localisation_key = string_Del_SP
		trigger = {
			has_female_heir = no
		}
	}
	text = {
		localisation_key = string_Dela_SP
		trigger = {
			has_female_heir = yes
		}
	}
}


# Ex: "[for the] prince(ss)" => "[al] príncipe/[a la] princessa"
defined_text = {
	name = GetalalaHer
	text = {
		localisation_key = string_al_SP
		trigger = {
			has_female_heir = no
		}
	}
	text = {
		localisation_key = string_ala_SP
		trigger = {
			has_female_heir = yes
		}
	}
}
# Ex: "[For the] prince(ss)" => "[Al] príncipe/[A la] princessa"
defined_text = {
	name = GetAlAlaHer
	text = {
		localisation_key = string_Al_SP
		trigger = {
			has_female_heir = no
		}
	}
	text = {
		localisation_key = string_Ala_SP
		trigger = {
			has_female_heir = yes
		}
	}
}


# Ex: "magnificient" => "magnífic[o]/magnífic[a]"
defined_text = {
	name = GetoaHer
	text = {
		localisation_key = string_o_SP
		trigger = {
			has_female_heir = no
		}
	}
	text = {
		localisation_key = string_a_SP
		trigger = {
			has_female_heir = yes
		}
	}
}


# --e/--a # TODO: find an example
defined_text = {
	name = GeteaHer
	text = {
		localisation_key = string_e_SP
		trigger = {
			has_female_heir = no
		}
	}
	text = {
		localisation_key = string_a_SP
		trigger = {
			has_female_heir = yes
		}
	}
}


# Ex: "Spanish" => "español[ø]/español[a]"
defined_text = {
	name = GetXaHer
	text = {
		localisation_key = string_X_SP
		trigger = {
			has_female_heir = no
		}
	}
	text = {
		localisation_key = string_a_SP
		trigger = {
			has_female_heir = yes
		}
	}
}


# Ex: "stubborn" => "cabez[ón]/cabez[ona]
defined_text = {
	name = GetononaHer
	text = {
		localisation_key = string_on_SP
		trigger = {
			has_female_heir = no
		}
	}
	text = {
		localisation_key = string_ona_SP
		trigger = {
			has_female_heir = yes
		}
	}
}


# Ex: "---" => "---[ín]/---[ina] # TODO: find an example
defined_text = {
	name = GetininaHer
	text = {
		localisation_key = string_in_SP
		trigger = {
			has_female_heir = no
		}
	}
	text = {
		localisation_key = string_ina_SP
		trigger = {
			has_female_heir = yes
		}
	}
}


# Ex: "say [him/her]" => "decir[lo/la]" # TODO: find a better example
defined_text = {
	name = GetlolaHer
	text = {
		localisation_key = string_lo_SP
		trigger = {
			has_female_heir = no
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			has_female_heir = yes
		}
	}
}
# Ex: "Say [him/her]" => "[Lo/La] decir" # TODO: find a better example
defined_text = {
	name = GetLoLaHer
	text = {
		localisation_key = string_Lo_SP
		trigger = {
			has_female_heir = no
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			has_female_heir = yes
		}
	}
}


# Ex: "say [him/her]" => "decir[le/la]" # TODO: find a better example
defined_text = {
	name = GetlelaHer
	text = {
		localisation_key = string_le_SP
		trigger = {
			has_female_heir = no
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			has_female_heir = yes
		}
	}
}
# Ex: "Say [him/her]" => "[Le/La] decir" # TODO: find a better example
defined_text = {
	name = GetLeLaHer
	text = {
		localisation_key = string_Le_SP
		trigger = {
			has_female_heir = no
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			has_female_heir = yes
		}
	}
}


# Ex: "French" => "franc[és/esa]"
defined_text = {
	name = GetesesaHer
	text = {
		localisation_key = string_es_SP
		trigger = {
			is_female = no
		}
	}
	text = {
		localisation_key = string_esa_SP
		trigger = {
			is_female = yes
		}
	}
}



#################################
###   Consorts // Consortes   ###
#################################

# Ex: "[the] consort" => "[el]/[la] consorte"
defined_text = {
	name = GetellaCons
	text = {
		localisation_key = string_el_SP
		trigger = {
			has_female_consort = no
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			has_female_consort = yes
		}
	}
}
# Ex: "[The] consort" => "[El]/[La] consorte"
defined_text = {
	name = GetElLaCons
	text = {
		localisation_key = string_El_SP
		trigger = {
			has_female_consort = no
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			has_female_consort = yes
		}
	}
}


# Ex: "[he/she] is" => "[él/ella] es"
defined_text = {
	name = GetelellaCons
	text = {
		localisation_key = string_el2_SP
		trigger = {
			has_female_consort = no
		}
	}
	text = {
		localisation_key = string_ella_SP
		trigger = {
			has_female_consort = yes
		}
	}
}
# Ex. "[He/She] is" => "[Él/Ella] es"
defined_text = {
	name = GetElEllaCons
	text = {
		localisation_key = string_El2_cap_SP
		trigger = {
			has_female_consort = no
		}
	}
	text = {
		localisation_key = string_Ella_cap_SP
		trigger = {
			has_female_consort = yes
		}
	}
}


# Ex: "[of the] consort" => "[del]/[de la] consorte"
defined_text = {
	name = GetdeldelaCons
	text = {
		localisation_key = string_del_SP
		trigger = {
			has_female_consort = no
		}
	}
	text = {
		localisation_key = string_dela_SP
		trigger = {
			has_female_consort = yes
		}
	}
}
# Ex: "[Of the] consort" => "[Del]/[De la] consorte"
defined_text = {
	name = GetDelDelaCons
	text = {
		localisation_key = string_Del_SP
		trigger = {
			has_female_consort = no
		}
	}
	text = {
		localisation_key = string_Dela_SP
		trigger = {
			has_female_consort = yes
		}
	}
}


# Ex: "[for the] consort" => "[al]/[a la] consorte"
defined_text = {
	name = GetalalaCons
	text = {
		localisation_key = string_al_SP
		trigger = {
			has_female_consort = no
		}
	}
	text = {
		localisation_key = string_ala_SP
		trigger = {
			has_female_consort = yes
		}
	}
}
# Ex: "[For the] consort" => "[Al]/[A la] consorte"
defined_text = {
	name = GetAlAlaCons
	text = {
		localisation_key = string_Al_SP
		trigger = {
			has_female_consort = no
		}
	}
	text = {
		localisation_key = string_Ala_SP
		trigger = {
			has_female_consort = yes
		}
	}
}


# Ex: "magnificient" => "magnífic[o]/magnífic[a]"
defined_text = {
	name = GetoaCons
	text = {
		localisation_key = string_o_SP
		trigger = {
			has_female_consort = no
		}
	}
	text = {
		localisation_key = string_a_SP
		trigger = {
			has_female_consort = yes
		}
	}
}


# --e/--a # TODO: find an example
defined_text = {
	name = GeteaCons
	text = {
		localisation_key = string_e_SP
		trigger = {
			has_female_consort = no
		}
	}
	text = {
		localisation_key = string_a_SP
		trigger = {
			has_female_consort = yes
		}
	}
}


# Ex: "Spanish" => "español[ø]/español[a]"
defined_text = {
	name = GetXaCons
	text = {
		localisation_key = string_X_SP
		trigger = {
			has_female_consort = no
		}
	}
	text = {
		localisation_key = string_a_SP
		trigger = {
			has_female_consort = yes
		}
	}
}


# Ex: "stubborn" => "cabez[ón]/cabez[ona]
defined_text = {
	name = GetononaCons
	text = {
		localisation_key = string_on_SP
		trigger = {
			has_female_consort = no
		}
	}
	text = {
		localisation_key = string_ona_SP
		trigger = {
			has_female_consort = yes
		}
	}
}


# Ex: "---" => "---[ín]/---[ina] # TODO: find an example
defined_text = {
	name = GetininaCons
	text = {
		localisation_key = string_in_SP
		trigger = {
			has_female_consort = no
		}
	}
	text = {
		localisation_key = string_ina_SP
		trigger = {
			has_female_consort = yes
		}
	}
}


# Ex: "say [him/her]" => "decir[lo/la]" # TODO: find a better example
defined_text = {
	name = GetlolaCons
	text = {
		localisation_key = string_lo_SP
		trigger = {
			has_female_consort = no
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			has_female_consort = yes
		}
	}
}
# Ex: "Say [him/her]" => "[Lo/La] decir" # TODO: find a better example
defined_text = {
	name = GetLoLaCons
	text = {
		localisation_key = string_Lo_SP
		trigger = {
			has_female_consort = no
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			has_female_consort = yes
		}
	}
}


# Ex: "say [him/her]" => "decir[le/la]" # TODO: find a better example
defined_text = {
	name = GetlelaCons
	text = {
		localisation_key = string_le_SP
		trigger = {
			has_female_consort = no
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			has_female_consort = yes
		}
	}
}
# Ex: "Say [him/her]" => "[Le/La] decir" # TODO: find a better example
defined_text = {
	name = GetLeLaCons
	text = {
		localisation_key = string_Le_SP
		trigger = {
			has_female_consort = no
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			has_female_consort = yes
		}
	}
}


# Ex: "French" => "franc[és/esa]"
defined_text = {
	name = GetesesaCons
	text = {
		localisation_key = string_es_SP
		trigger = {
			has_female_consort = no
		}
	}
	text = {
		localisation_key = string_esa_SP
		trigger = {
			has_female_consort = yes
		}
	}
}



#################################################################
###   Administrative Advisors // Consejeros administrativos   ###
#################################################################

# Ex: "[the] advisor" => "[el] consejero/[la] consejera"
defined_text = {
	name = GetellaCnjAdm
	text = {
		localisation_key = string_el_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_female = yes }
		}
	}
}
# Ex: "[The] advisor" => "[El] consejero/[La] consejera"
defined_text = {
	name = GetElLaCnjAdm
	text = {
		localisation_key = string_El_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "[he/she] is" => "[él/ella] es"
defined_text = {
	name = GetelellaCnjAdm
	text = {
		localisation_key = string_el2_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_ella_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_female = yes }
		}
	}
}
# Ex. "[He/She] is" => "[Él/Ella] es"
defined_text = {
	name = GetElEllaCnjAdm
	text = {
		localisation_key = string_El2_cap_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_Ella_cap_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "[of the] advisor" => "[del] consejero/[de la] consejera"
defined_text = {
	name = GetdeldelaCnjAdm
	text = {
		localisation_key = string_del_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_dela_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_female = yes }
		}
	}
}
# Ex: "[Of the] advisor" => "[Del] consejero/[De la] consejera"
defined_text = {
	name = GetDelDelaCnjAdm
	text = {
		localisation_key = string_Del_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_Dela_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "[for the] advisor" => "[al]/[a la] consejera"
defined_text = {
	name = GetalalaCnjAdm
	text = {
		localisation_key = string_al_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_ala_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_female = yes }
		}
	}
}
# Ex: "[For the] advisor" => "[Al]/[A la] consejera"
defined_text = {
	name = GetAlAlaCnjAdm
	text = {
		localisation_key = string_Al_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_Ala_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "magnificient" => "magnífic[o]/magnífic[a]"
defined_text = {
	name = GetoaCnjAdm
	text = {
		localisation_key = string_o_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_a_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# --e/--a # TODO: find an example
defined_text = {
	name = GeteaCnjAdm
	text = {
		localisation_key = string_e_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_a_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "Spanish" => "español[ø]/español[a]"
defined_text = {
	name = GetXaCnjAdm
	text = {
		localisation_key = string_X_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_a_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "stubborn" => "cabez[ón]/cabez[ona]
defined_text = {
	name = GetononaCnjAdm
	text = {
		localisation_key = string_on_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_ona_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "---" => "---[ín]/---[ina] # TODO: find an example
defined_text = {
	name = GetininaCnjAdm
	text = {
		localisation_key = string_in_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_ina_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "[Treasurer]" => "[tesórero]/[tesórera]" (lower case)
defined_text = {
	name = GetCnjAdm
	text = {
		localisation_key = string_philosopher_male_SP
		trigger = {
			advisor = philosopher
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_philosopher_fem_SP
		trigger = {
			advisor = philosopher
			employed_advisor = { is_female = yes }
		}
	}
	text = {
		localisation_key = string_natural_scientist_SP
		trigger = {
			advisor = natural_scientist
		}
	}
	text = {
		localisation_key = string_artist_SP
		trigger = {
			advisor = artist
		}
	}
	text = {
		localisation_key = string_treasurer_male_SP
		trigger = {
			advisor = treasurer
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_treasurer_fem_SP
		trigger = {
			advisor = treasurer
			employed_advisor = { is_female = yes }
		}
	}
	text = {
		localisation_key = string_theologian_male_SP
		trigger = {
			advisor = theologian
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_theologian_fem_SP
		trigger = {
			advisor = theologian
			employed_advisor = { is_female = yes }
		}
	}
	text = {
		localisation_key = string_master_of_mint_male_SP
		trigger = {
			advisor = master_of_mint
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_master_of_mint_fem_SP
		trigger = {
			advisor = master_of_mint
			employed_advisor = { is_female = yes }
		}
	}
	text = {
		localisation_key = string_inquisitor_male_SP
		trigger = {
			advisor = inquisitor
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_inquisitor_fem_SP
		trigger = {
			advisor = inquisitor
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "say [him/her]" => "decir[lo/la]" # TODO: find a better example
defined_text = {
	name = GetlolaCnjAdm
	text = {
		localisation_key = string_lo_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_female = yes }
		}
	}
}
# Ex: "Say [him/her]" => "[Lo/La] decir" # TODO: find a better example
defined_text = {
	name = GetLoLaCnjAdm
	text = {
		localisation_key = string_Lo_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "say [him/her]" => "decir[le/la]" # TODO: find a better example
defined_text = {
	name = GetlelaCnjAdm
	text = {
		localisation_key = string_le_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_female = yes }
		}
	}
}
# Ex: "Say [him/her]" => "[Le/La] decir" # TODO: find a better example
defined_text = {
	name = GetLeLaCnjAdm
	text = {
		localisation_key = string_Le_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "French" => "franc[és/esa]"
defined_text = {
	name = GetesesaCons
	text = {
		localisation_key = string_es_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_esa_SP
		trigger = {
			OR = {
				advisor = philosopher
				advisor = natural_scientist
				advisor = artist
				advisor = treasurer
				advisor = theologian
				advisor = master_of_mint
				advisor = inquisitor
			}
			employed_advisor = { is_female = yes }
		}
	}
}



##########################################################
###   Diplomatic Advisors // Consejeros diplomáticos   ###
##########################################################

# Ex: "[the] advisor" => "[el] consejero/[la] consejera"
defined_text = {
	name = GetellaCnjDip
	text = {
		localisation_key = string_el_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_female = yes }
		}
	}
}
# Ex: "[The] advisor" => "[El] consejero/[La] consejera"
defined_text = {
	name = GetElLaCnjDip
	text = {
		localisation_key = string_El_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "[he/she] is" => "[él/ella] es"
defined_text = {
	name = GetelellaCnjDip
	text = {
		localisation_key = string_el2_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_ella_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_female = yes }
		}
	}
}
# Ex. "[He/She] is" => "[Él/Ella] es"
defined_text = {
	name = GetElEllaCnjDip
	text = {
		localisation_key = string_El2_cap_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_Ella_cap_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "[of the] advisor" => "[del] consejero/[de la] consejera"
defined_text = {
	name = GetdeldelaCnjDip
	text = {
		localisation_key = string_del_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_dela_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_female = yes }
		}
	}
}
# Ex: "[Of the] advisor" => "[Del] consejero/[De la] consejera"
defined_text = {
	name = GetDelDelaCnjDip
	text = {
		localisation_key = string_Del_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_Dela_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "[for the] advisor" => "[al]/[a la] consejera"
defined_text = {
	name = GetalalaCnjDip
	text = {
		localisation_key = string_al_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_ala_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_female = yes }
		}
	}
}
# Ex: "[For the] advisor" => "[Al]/[A la] consejera"
defined_text = {
	name = GetAlAlaCnjDip
	text = {
		localisation_key = string_Al_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_Ala_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "magnificient" => "magnífic[o]/magnífic[a]"
defined_text = {
	name = GetoaCnjDip
	text = {
		localisation_key = string_o_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_a_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# --e/--a # TODO: find an example
defined_text = {
	name = GeteaCnjDip
	text = {
		localisation_key = string_e_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_a_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "Spanish" => "español[ø]/español[a]"
defined_text = {
	name = GetXaCnjDip
	text = {
		localisation_key = string_X_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_a_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "stubborn" => "cabez[ón]/cabez[ona]
defined_text = {
	name = GetononaCnjDip
	text = {
		localisation_key = string_on_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_ona_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "---" => "---[ín]/---[ina] # TODO: find an example
defined_text = {
	name = GetininaCnjDip
	text = {
		localisation_key = string_in_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_ina_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "[Colonial Governor]" => "[gobernador colonial]/[gobernadora colonial]" (lower case)
defined_text = {
	name = GetCnjDip
	text = {
		localisation_key = string_statesman_SP
		trigger = {
			advisor = statesman
		}
	}
	text = {
		localisation_key = string_naval_reformer_male_SP
		trigger = {
			advisor = naval_reformer
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_naval_reformer_fem_SP
		trigger = {
			advisor = naval_reformer
			employed_advisor = { is_female = yes }
		}
	}
	text = {
		localisation_key = string_trader_SP
		trigger = {
			advisor = trader
		}
	}
	text = {
		localisation_key = string_spymaster_male_SP
		trigger = {
			advisor = spymaster
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_spymaster_fem_SP
		trigger = {
			advisor = spymaster
			employed_advisor = { is_female = yes }
		}
	}
	text = {
		localisation_key = string_colonial_governor_male_SP
		trigger = {
			advisor = colonial_governor
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_colonial_governor_fem_SP
		trigger = {
			advisor = colonial_governor
			employed_advisor = { is_female = yes }
		}
	}
	text = {
		localisation_key = string_diplomat_male_SP
		trigger = {
			advisor = diplomat
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_diplomat_fem_SP
		trigger = {
			advisor = diplomat
			employed_advisor = { is_female = yes }
		}
	}
	text = {
		localisation_key = string_navigator_SP
		trigger = {
			advisor = navigator
		}
	}
}



# Ex: "catch [him/her]" => "capturar[lo/la]"
defined_text = {
	name = GetlolaCnjDip
	text = {
		localisation_key = string_lo_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_female = yes }
		}
	}
}
# Ex: "Say [him/her]" => "[Lo/La] decir" # TODO: find a better example
defined_text = {
	name = GetLoLaCnjDip
	text = {
		localisation_key = string_Lo_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "reach [him/her]" => alcanzar[le/la]"
defined_text = {
	name = GetlelaCnjDip
	text = {
		localisation_key = string_le_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_female = yes }
		}
	}
}
# Ex: "Told [him/her]" => "[Le/La] dicen"
defined_text = {
	name = GetLeLaCnjDip
	text = {
		localisation_key = string_Le_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "French" => "franc[és/esa]"
defined_text = {
	name = GetesesaCnjDip
	text = {
		localisation_key = string_es_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_esa_SP
		trigger = {
			OR = {
				advisor = statesman
				advisor = naval_reformer
				advisor = trader
				advisor = spymaster
				advisor = colonial_governor
				advisor = diplomat
				advisor = navigator
			}
			employed_advisor = { is_female = yes }
		}
	}
}



#####################################################
###   Military Advisors // Consejeros militares   ###
#####################################################

# Ex: "[the] advisor" => "[el] consejero/[la] consejera"
defined_text = {
	name = GetellaCnjMil
	text = {
		localisation_key = string_el_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_female = yes }
		}
	}
}
# Ex: "[The] advisor" => "[El] consejero/[La] consejera"
defined_text = {
	name = GetElLaCnjMil
	text = {
		localisation_key = string_El_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "[he/she] is" => "[él/ella] es"
defined_text = {
	name = GetelellaCnjMil
	text = {
		localisation_key = string_el2_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_ella_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_female = yes }
		}
	}
}
# Ex. "[He/She] is" => "[Él/Ella] es"
defined_text = {
	name = GetElEllaCnjMil
	text = {
		localisation_key = string_El2_cap_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_Ella_cap_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "[of the] advisor" => "[del] consejero/[de la] consejera"
defined_text = {
	name = GetdeldelaCnjMil
	text = {
		localisation_key = string_del_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_dela_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_female = yes }
		}
	}
}
# Ex: "[Of the] advisor" => "[Del] consejero/[De la] consejera"
defined_text = {
	name = GetDelDelaCnjMil
	text = {
		localisation_key = string_Del_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_Dela_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "[for the] advisor" => "[al]/[a la] consejera"
defined_text = {
	name = GetalalaCnjMil
	text = {
		localisation_key = string_al_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_ala_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_female = yes }
		}
	}
}
# Ex: "[For the] advisor" => "[Al]/[A la] consejera"
defined_text = {
	name = GetAlAlaCnjMil
	text = {
		localisation_key = string_Al_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_Ala_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "magnificient" => "magnífic[o]/magnífic[a]"
defined_text = {
	name = GetoaCnjMil
	text = {
		localisation_key = string_o_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_a_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# --e/--a # TODO: find an example
defined_text = {
	name = GeteaCnjMil
	text = {
		localisation_key = string_e_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_a_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "Spanish" => "español[ø]/español[a]"
defined_text = {
	name = GetXaCnjMil
	text = {
		localisation_key = string_X_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_a_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "stubborn" => "cabez[ón]/cabez[ona]
defined_text = {
	name = GetononaCnjMil
	text = {
		localisation_key = string_on_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_ona_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "---" => "---[ín]/---[ina] # TODO: find an example
defined_text = {
	name = GetininaCnjMil
	text = {
		localisation_key = string_in_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_ina_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "[Recruitmaster]" => "[reclutador]/[reclutadora]" (lower case)
defined_text = {
	name = GetCnjMil
	text = {
		localisation_key = string_army_reformer_male_SP
		trigger = {
			advisor = army_reformer
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_army_reformer_fem_SP
		trigger = {
			advisor = army_reformer
			employed_advisor = { is_female = yes }
		}
	}
	text = {
		localisation_key = string_army_organiser_male_SP
		trigger = {
			advisor = army_organiser
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_army_organiser_fem_SP
		trigger = {
			advisor = army_organiser
			employed_advisor = { is_female = yes }
		}
	}
	text = {
		localisation_key = string_commandant_male_SP
		trigger = {
			advisor = commandant
		}
	}
	text = {
		localisation_key = string_quartermaster_SP
		trigger = {
			advisor = quartermaster
		}
	}
	text = {
		localisation_key = string_recruitmaster_male_SP
		trigger = {
			advisor = recruitmaster
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_recruitmaster_fem_SP
		trigger = {
			advisor = recruitmaster
			employed_advisor = { is_female = yes }
		}
	}
	text = {
		localisation_key = string_fortification_expert_male_SP
		trigger = {
			advisor = fortification_expert
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_fortification_expert_fem_SP
		trigger = {
			advisor = fortification_expert
			employed_advisor = { is_female = yes }
		}
	}
	text = {
		localisation_key = string_grand_captain_male_SP
		trigger = {
			advisor = grand_captain
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_grand_captain_fem_SP
		trigger = {
			advisor = grand_captain
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "find [him/her]" => "hallar[lo/la]"
defined_text = {
	name = GetlolaCnjMil
	text = {
		localisation_key = string_lo_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_female = yes }
		}
	}
}
# Ex: "They find [him/her]" => "[Lo/La] encuentran"
defined_text = {
	name = GetLoLaCnjMil
	text = {
		localisation_key = string_Lo_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "Kill [him/her]" => "matar[le/la]"
defined_text = {
	name = GetlelaCnjMil
	text = {
		localisation_key = string_le_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_female = yes }
		}
	}
}
# Ex: "Say [him/her]" => "[Le/La] decir" # TODO: find a better example
defined_text = {
	name = GetLeLaCnjMil
	text = {
		localisation_key = string_Le_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_female = yes }
		}
	}
}


# Ex: "French" => "franc[és/esa]"
defined_text = {
	name = GetesesaCnjMil
	text = {
		localisation_key = string_es_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_male = yes }
		}
	}
	text = {
		localisation_key = string_esa_SP
		trigger = {
			OR = {
				advisor = army_reformer
				advisor = army_organiser
				advisor = commandant
				advisor = quartermaster
				advisor = recruitmaster
				advisor = fortification_expert
				advisor = grand_captain
			}
			employed_advisor = { is_female = yes }
		}
	}
}



################################################
###   Religion Groups // Grupos religiosos   ###
################################################

### Ex: "[Christianity]" => "[cristianismo]"
defined_text = {
	name = GetGrupoReligioso
	text = {
		localisation_key = string_christian_n_SP
		trigger = { religion_group = christian }
	}
	text = {
		localisation_key = string_muslim_n_SP
		trigger = { religion_group = muslim }
	}
	text = {
		localisation_key = string_eastern_n_SP
		trigger = { religion_group = eastern }
	}
	text = {
		localisation_key = string_dharmic_n_SP
		trigger = { religion_group = dharmic }
	}
	text = {
		localisation_key = string_pagan_n_SP
		trigger = { religion_group = pagan }
	}
	text = {
		localisation_key = string_jewish_group_n_SP
		trigger = { religion_group = jewish_group }
	}
	text = {
		localisation_key = string_zoroastrian_group_n_SP
		trigger = { religion_group = zoroastrian_group }
	}
}


### Ex: "[Christian]" => "[cristiano]" (singular masculine/masculino singular)
defined_text = {
	name = GetGrupoRelMS
	text = {
		localisation_key = string_christian_ms_SP
		trigger = { religion_group = christian }
	}
	text = {
		localisation_key = string_muslim_ms_SP
		trigger = { religion_group = muslim }
	}
	text = {
		localisation_key = string_eastern_ms_SP
		trigger = { religion_group = eastern }
	}
	text = {
		localisation_key = string_dharmic_ms_SP
		trigger = { religion_group = dharmic }
	}
	text = {
		localisation_key = string_pagan_ms_SP
		trigger = { religion_group = pagan }
	}
	text = {
		localisation_key = string_jewish_group_ms_SP
		trigger = { religion_group = jewish_group }
	}
	text = {
		localisation_key = string_zoroastrian_group_ms_SP
		trigger = { religion_group = zoroastrian_group }
	}
}


### Ex: "[Christian]" => "[cristiano]" (singular feminine/feminino singular)
defined_text = {
	name = GetGrupoRelFS
	text = {
		localisation_key = string_christian_fs_SP
		trigger = { religion_group = christian }
	}
	text = {
		localisation_key = string_muslim_fs_SP
		trigger = { religion_group = muslim }
	}
	text = {
		localisation_key = string_eastern_fs_SP
		trigger = { religion_group = eastern }
	}
	text = {
		localisation_key = string_dharmic_fs_SP
		trigger = { religion_group = dharmic }
	}
	text = {
		localisation_key = string_pagan_fs_SP
		trigger = { religion_group = pagan }
	}
	text = {
		localisation_key = string_jewish_group_fs_SP
		trigger = { religion_group = jewish_group }
	}
	text = {
		localisation_key = string_zoroastrian_group_fs_SP
		trigger = { religion_group = zoroastrian_group }
	}
}


### Ex: "[Christian]" => "[cristianos]" (plural masculine/masculino plural)
defined_text = {
	name = GetGrupoRelMP
	text = {
		localisation_key = string_christian_mp_SP
		trigger = { religion_group = christian }
	}
	text = {
		localisation_key = string_muslim_mp_SP
		trigger = { religion_group = muslim }
	}
	text = {
		localisation_key = string_eastern_mp_SP
		trigger = { religion_group = eastern }
	}
	text = {
		localisation_key = string_dharmic_mp_SP
		trigger = { religion_group = dharmic }
	}
	text = {
		localisation_key = string_pagan_mp_SP
		trigger = { religion_group = pagan }
	}
	text = {
		localisation_key = string_jewish_group_mp_SP
		trigger = { religion_group = jewish_group }
	}
	text = {
		localisation_key = string_zoroastrian_group_mp_SP
		trigger = { religion_group = zoroastrian_group }
	}
}


### Ex: "[Christian]" => "[cristianas]" (plural feminine/feminino plural)
defined_text = {
	name = GetGrupoRelFP
	text = {
		localisation_key = string_christian_fp_SP
		trigger = { religion_group = christian }
	}
	text = {
		localisation_key = string_muslim_fp_SP
		trigger = { religion_group = muslim }
	}
	text = {
		localisation_key = string_eastern_fp_SP
		trigger = { religion_group = eastern }
	}
	text = {
		localisation_key = string_dharmic_fp_SP
		trigger = { religion_group = dharmic }
	}
	text = {
		localisation_key = string_pagan_fp_SP
		trigger = { religion_group = pagan }
	}
	text = {
		localisation_key = string_jewish_group_fp_SP
		trigger = { religion_group = jewish_group }
	}
	text = {
		localisation_key = string_zoroastrian_group_fp_SP
		trigger = { religion_group = zoroastrian_group }
	}
}


### Ex: "[the] Christianity" => "el [cristianismo] / [la] X" # There is no feminine Religion Group in the list
defined_text = {
	name = GetellaGrupoReligioso
	text = {
		localisation_key = string_el_SP
		trigger = {
			OR = { # TODO: all feminine names in this list have to be inserted under the following trigger
				religion_group = christian
				religion_group = dharmic
				religion_group = pagan
				religion_group = jewish_group
				religion_group = zoroastrian_group
			}
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			OR = {
				religion_group = muslim
				religion_group = eastern
			}
		}
	}
}
### Ex: "[The] christianism" => "El [cristianismo] / [La] X" # There is no feminine Religion Group in the list
defined_text = {
	name = GetElLaGrupoReligioso
	text = {
		localisation_key = string_El_SP
		trigger = {
			OR = { # TODO: all feminine names in this list have to be inserted under the following trigger
				religion_group = christian
				religion_group = dharmic
				religion_group = pagan
				religion_group = jewish_group
				religion_group = zoroastrian_group
			}
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			OR = {
				religion_group = muslim
				religion_group = eastern
			}
		}
	}
}


### Ex: "[of] Christianity" => "[del] cristianismo /[de la] X" # There is no feminine Religion Group in the list
defined_text = {
	name = GetdeldelaGrupoReligioso
	text = {
		localisation_key = string_del_SP
		trigger = {
			OR = { # TODO: all feminine names in this list have to be inserted under the following trigger
				religion_group = christian
				religion_group = dharmic
				religion_group = pagan
				religion_group = jewish_group
				religion_group = zoroastrian_group
			}
		}
	}
	text = {
		localisation_key = string_dela_SP
		trigger = {
			OR = {
				religion_group = muslim
				religion_group = eastern
			}
		}
	}
}
### Ex: "[Of] Christianity" => "[Del] cristianismo / [De la] X" # There is no feminine Religion Group in the list
defined_text = {
	name = GetDelDelaGrupoReligioso
	text = {
		localisation_key = string_Del_SP
		trigger = {
			OR = { # TODO: all feminine names in this list have to be inserted under the following trigger
				religion_group = christian
				religion_group = dharmic
				religion_group = pagan
				religion_group = jewish_group
				religion_group = zoroastrian_group
			}
		}
	}
	text = {
		localisation_key = string_Dela_SP
		trigger = {
			OR = {
				religion_group = muslim
				religion_group = eastern
			}
		}
	}
}



### Ex: "[of] Christianity" => "[del] cristianismo /[de la] X" # There is no feminine Religion Group in the list
defined_text = {
	name = GetalalaGrupoReligioso
	text = {
		localisation_key = string_al_SP
		trigger = {
			OR = { # TODO: all feminine names in this list have to be inserted under the following trigger
				religion_group = christian
				religion_group = dharmic
				religion_group = pagan
				religion_group = jewish_group
				religion_group = zoroastrian_group
			}
		}
	}
	text = {
		localisation_key = string_ala_SP
		trigger = {
			OR = {
				religion_group = muslim
				religion_group = eastern
			}
		}
	}
}
### Ex: "[Of] Christianity" => "[Del] cristianismo / [De la] X" # There is no feminine Religion Group in the list
defined_text = {
	name = GetAlAlaGrupoReligioso
	text = {
		localisation_key = string_Al_SP
		trigger = {
			OR = { # TODO: all feminine names in this list have to be inserted under the following trigger
				religion_group = christian
				religion_group = dharmic
				religion_group = pagan
				religion_group = jewish_group
				religion_group = zoroastrian_group
			}
		}
	}
	text = {
		localisation_key = string_Ala_SP
		trigger = {
			OR = {
				religion_group = muslim
				religion_group = eastern
			}
		}
	}
}



######################################################
### Religion & Heresies // Religiones y herejías   ###
######################################################

### Ex: "[Catholicism]" => "[catolicismo]"
defined_text = {
	name = GetReligion
	text = {
		localisation_key = string_catholic_n_SP
		trigger = { religion = catholic }
	}
	text = {
		localisation_key = string_BOGOMILIST_n_SP
		trigger = { religion = BOGOMILIST }
	}
	text = {
		localisation_key = string_WALDENSIAN_n_SP
		trigger = { religion = WALDENSIAN }
	}
	text = {
		localisation_key = string_SPATICELLI_n_SP
		trigger = { religion = FRATICELLI }
	}
	text = {
		localisation_key = string_HUSSITE_n_SP
		trigger = { religion = HUSSITE }
	}
	text = {
		localisation_key = string_LOLLARD_n_SP
		trigger = { religion = LOLLARD }
	}
	text = {
		localisation_key = string_SOCINIAN_n_SP
		trigger = { religion = SOCINIAN }
	}
	text = {
		localisation_key = string_protestant_n_SP
		trigger = { religion = protestant }
	}
	text = {
		localisation_key = string_PENTECOSTAL_n_SP
		trigger = { religion = PENTECOSTAL }
	}
	text = {
		localisation_key = string_PURITAN_n_SP
		trigger = { religion = PURITAN }
	}
	text = {
		localisation_key = string_CONGREGATIONALIST_n_SP
		trigger = { religion = CONGREGATIONALIST }
	}
	text = {
		localisation_key = string_reformed_n_SP
		trigger = { religion = reformed }
	}
	text = {
		localisation_key = string_METHODIST_n_SP
		trigger = { religion = METHODIST }
	}
	text = {
		localisation_key = string_BAPTIST_n_SP
		trigger = { religion = BAPTIST }
	}
	text = {
		localisation_key = string_QUAKER_n_SP
		trigger = { religion = QUAKER }
	}
	text = {
		localisation_key = string_orthodox_n_SP
		trigger = { religion = orthodox }
	}
	text = {
		localisation_key = string_OLD_BELIEVER_n_SP
		trigger = { religion = OLD_BELIEVER }
	}
	text = {
		localisation_key = string_MOLOKAN_n_SP
		trigger = { religion = MOLOKAN }
	}
	text = {
		localisation_key = string_DUKHOBOR_n_SP
		trigger = { religion = DUKHOBOR }
	}
	text = {
		localisation_key = string_KHLYST_n_SP
		trigger = { religion = KHLYST }
	}
	text = {
		localisation_key = string_SKOPTSY_n_SP
		trigger = { religion = SKOPTSY }
	}
	text = {
		localisation_key = string_ICONOCLAST_n_SP
		trigger = { religion = ICONOCLAST }
	}
	text = {
		localisation_key = string_coptic_n_SP
		trigger = { religion = coptic }
	}
	text = {
		localisation_key = string_ZAMIKAELITES_n_SP
		trigger = { religion = ZAMIKAELITES }
	}
	text = {
		localisation_key = string_STEPHANITES_n_SP
		trigger = { religion = STEPHANITES }
	}
	text = {
		localisation_key = string_EUSTATHIANS_n_SP
		trigger = { religion = EUSTATHIANS }
	}
	text = {
		localisation_key = string_sunni_n_SP
		trigger = { religion = sunni }
	}
	text = {
		localisation_key = string_BEKTASHI_n_SP
		trigger = { religion = BEKTASHI }
	}
	text = {
		localisation_key = string_AHMADI_n_SP
		trigger = { religion = AHMADI }
	}
	text = {
		localisation_key = string_ZIKRI_n_SP
		trigger = { religion = ZIKRI }
	}
	text = {
		localisation_key = string_YAZIDI_n_SP
		trigger = { religion = YAZIDI }
	}
	text = {
		localisation_key = string_shiite_n_SP
		trigger = { religion = shiite }
	}
	text = {
		localisation_key = string_DRUZE_n_SP
		trigger = { religion = DRUZE }
	}
	text = {
		localisation_key = string_HURUFI_n_SP
		trigger = { religion = HURUFI }
	}
	text = {
		localisation_key = string_ZAIDI_n_SP
		trigger = { religion = ZAIDI }
	}
	text = {
		localisation_key = string_ibadi_n_SP
		trigger = { religion = ibadi }
	}
	text = {
		localisation_key = string_HARURI_n_SP
		trigger = { religion = HARURI }
	}
	text = {
		localisation_key = string_SUFRI_n_SP
		trigger = { religion = SUFRI }
	}
	text = {
		localisation_key = string_NAJADAT_n_SP
		trigger = { religion = NAJADAT }
	}
	text = {
		localisation_key = string_AZRAQI_n_SP
		trigger = { religion = AZRAQI }
	}
	text = {
		localisation_key = string_buddhism_n_SP
		trigger = { religion = buddhism }
	}
	text = {
		localisation_key = string_ZEN_n_SP
		trigger = { religion = ZEN }
	}
	text = {
		localisation_key = string_vajrayana_n_SP
		trigger = { religion = vajrayana }
	}
	text = {
		localisation_key = string_mahayana_n_SP
		trigger = { religion = mahayana }
	}
	text = {
		localisation_key = string_confucianism_n_SP
		trigger = { religion = confucianism }
	}
	text = {
		localisation_key = string_TAOIST_n_SP
		trigger = { religion = TAOIST }
	}
	text = {
		localisation_key = string_shinto_n_SP
		trigger = { religion = shinto }
	}
	text = {
		localisation_key = string_SHUGENDO_n_SP
		trigger = { religion = SHUGENDO }
	}
	text = {
		localisation_key = string_hinduism_n_SP
		trigger = { religion = hinduism }
	}
	text = {
		localisation_key = string_BHAKTI_n_SP
		trigger = { religion = BHAKTI }
	}
	text = {
		localisation_key = string_sikhism_n_SP
		trigger = { religion = sikhism }
	}
	text = {
		localisation_key = string_MASANDIS_n_SP
		trigger = { religion = MASANDIS }
	}
	text = {
		localisation_key = string_animism_n_SP
		trigger = { religion = animism }
	}
	text = {
		localisation_key = string_SNAKE_CLAN_n_SP
		trigger = { religion = SNAKE_CLAN }
	}
	text = {
		localisation_key = string_shamanism_n_SP
		trigger = { religion = shamanism }
	}
	text = {
		localisation_key = string_GOAT_SKULL_n_SP
		trigger = { religion = GOAT_SKULL }
	}
	text = {
		localisation_key = string_totemism_n_SP
		trigger = { religion = totemism }
	}
	text = {
		localisation_key = string_BEAR_SPIRIT_n_SP
		trigger = { religion = BEAR_SPIRIT }
	}
	text = {
		localisation_key = string_inti_n_SP
		trigger = { religion = inti }
	}
	text = {
		localisation_key = string_INTI_HERETIC_n_SP
		trigger = { religion = INTI_HERETIC }
	}
	text = {
		localisation_key = string_nahuatl_n_SP
		trigger = { religion = nahuatl }
	}
	text = {
		localisation_key = string_NAHUATL_HERETIC_n_SP
		trigger = { religion = NAHUATL_HERETIC }
	}
	text = {
		localisation_key = string_mesoamerican_religion_n_SP
		trigger = { religion = mesoamerican_religion }
	}
	text = {
		localisation_key = string_MESOAMERICAN_HERETIC_n_SP
		trigger = { religion = MESOAMERICAN_HERETIC }
	}
	text = {
		localisation_key = string_norse_pagan_reformed_n_SP
		trigger = { religion = norse_pagan_reformed }
	}
	text = {
		localisation_key = string_OLD_NORSE_n_SP
		trigger = { religion = OLD_NORSE }
	}
	text = {
		localisation_key = string_tengri_pagan_reformed_n_SP
		trigger = { religion = tengri_pagan_reformed }
	}
	text = {
		localisation_key = string_OLD_TENGRI_n_SP
		trigger = { religion = OLD_TENGRI }
	}
	text = {
		localisation_key = string_jewish_n_SP
		trigger = { religion = jewish }
	}
	text = {
		localisation_key = string_SAMARITAN_n_SP
		trigger = { religion = SAMARITAN }
	}
	text = {
		localisation_key = string_KARAITE_n_SP
		trigger = { religion = KARAITE }
	}
	text = {
		localisation_key = string_MAZDAKI_n_SP
		trigger = { religion = MAZDAKI }
	}
	text = {
		localisation_key = string_MANICHEAN_n_SP
		trigger = { religion = MANICHEAN }
	}
}


### Ex: "[Catholic]" => "[católico]" (singular masculine / masculino singular)
defined_text = {
	name = GetReligionMS
	text = {
		localisation_key = string_catholic_ms_SP
		trigger = { religion = catholic }
	}
	text = {
		localisation_key = string_BOGOMILIST_ms_SP
		trigger = { religion = BOGOMILIST }
	}
	text = {
		localisation_key = string_WALDENSIAN_ms_SP
		trigger = { religion = WALDENSIAN }
	}
	text = {
		localisation_key = string_SPATICELLI_ms_SP
		trigger = { religion = FRATICELLI }
	}
	text = {
		localisation_key = string_HUSSITE_ms_SP
		trigger = { religion = HUSSITE }
	}
	text = {
		localisation_key = string_LOLLARD_ms_SP
		trigger = { religion = LOLLARD }
	}
	text = {
		localisation_key = string_SOCINIAN_ms_SP
		trigger = { religion = SOCINIAN }
	}
	text = {
		localisation_key = string_protestant_ms_SP
		trigger = { religion = protestant }
	}
	text = {
		localisation_key = string_PENTECOSTAL_ms_SP
		trigger = { religion = PENTECOSTAL }
	}
	text = {
		localisation_key = string_PURITAN_ms_SP
		trigger = { religion = PURITAN }
	}
	text = {
		localisation_key = string_CONGREGATIONALIST_ms_SP
		trigger = { religion = CONGREGATIONALIST }
	}
	text = {
		localisation_key = string_reformed_ms_SP
		trigger = { religion = reformed }
	}
	text = {
		localisation_key = string_METHODIST_ms_SP
		trigger = { religion = METHODIST }
	}
	text = {
		localisation_key = string_BAPTIST_ms_SP
		trigger = { religion = BAPTIST }
	}
	text = {
		localisation_key = string_QUAKER_ms_SP
		trigger = { religion = QUAKER }
	}
	text = {
		localisation_key = string_orthodox_ms_SP
		trigger = { religion = orthodox }
	}
	text = {
		localisation_key = string_OLD_BELIEVER_ms_SP
		trigger = { religion = OLD_BELIEVER }
	}
	text = {
		localisation_key = string_MOLOKAN_ms_SP
		trigger = { religion = MOLOKAN }
	}
	text = {
		localisation_key = string_DUKHOBOR_ms_SP
		trigger = { religion = DUKHOBOR }
	}
	text = {
		localisation_key = string_KHLYST_ms_SP
		trigger = { religion = KHLYST }
	}
	text = {
		localisation_key = string_SKOPTSY_ms_SP
		trigger = { religion = SKOPTSY }
	}
	text = {
		localisation_key = string_ICONOCLAST_ms_SP
		trigger = { religion = ICONOCLAST }
	}
	text = {
		localisation_key = string_coptic_ms_SP
		trigger = { religion = coptic }
	}
	text = {
		localisation_key = string_ZAMIKAELITES_ms_SP
		trigger = { religion = ZAMIKAELITES }
	}
	text = {
		localisation_key = string_STEPHANITES_ms_SP
		trigger = { religion = STEPHANITES }
	}
	text = {
		localisation_key = string_EUSTATHIANS_ms_SP
		trigger = { religion = EUSTATHIANS }
	}
	text = {
		localisation_key = string_sunni_ms_SP
		trigger = { religion = sunni }
	}
	text = {
		localisation_key = string_BEKTASHI_ms_SP
		trigger = { religion = BEKTASHI }
	}
	text = {
		localisation_key = string_AHMADI_ms_SP
		trigger = { religion = AHMADI }
	}
	text = {
		localisation_key = string_ZIKRI_ms_SP
		trigger = { religion = ZIKRI }
	}
	text = {
		localisation_key = string_YAZIDI_ms_SP
		trigger = { religion = YAZIDI }
	}
	text = {
		localisation_key = string_shiite_ms_SP
		trigger = { religion = shiite }
	}
	text = {
		localisation_key = string_DRUZE_ms_SP
		trigger = { religion = DRUZE }
	}
	text = {
		localisation_key = string_HURUFI_ms_SP
		trigger = { religion = HURUFI }
	}
	text = {
		localisation_key = string_ZAIDI_ms_SP
		trigger = { religion = ZAIDI }
	}
	text = {
		localisation_key = string_ibadi_ms_SP
		trigger = { religion = ibadi }
	}
	text = {
		localisation_key = string_HARURI_ms_SP
		trigger = { religion = HARURI }
	}
	text = {
		localisation_key = string_SUFRI_ms_SP
		trigger = { religion = SUFRI }
	}
	text = {
		localisation_key = string_NAJADAT_ms_SP
		trigger = { religion = NAJADAT }
	}
	text = {
		localisation_key = string_AZRAQI_ms_SP
		trigger = { religion = AZRAQI }
	}
	text = {
		localisation_key = string_buddhism_ms_SP
		trigger = { religion = buddhism }
	}
	text = {
		localisation_key = string_ZEN_ms_SP
		trigger = { religion = ZEN }
	}
	text = {
		localisation_key = string_vajrayana_ms_SP
		trigger = { religion = vajrayana }
	}
	text = {
		localisation_key = string_mahayana_ms_SP
		trigger = { religion = mahayana }
	}
	text = {
		localisation_key = string_confucianism_ms_SP
		trigger = { religion = confucianism }
	}
	text = {
		localisation_key = string_TAOIST_ms_SP
		trigger = { religion = TAOIST }
	}
	text = {
		localisation_key = string_shinto_ms_SP
		trigger = { religion = shinto }
	}
	text = {
		localisation_key = string_SHUGENDO_ms_SP
		trigger = { religion = SHUGENDO }
	}
	text = {
		localisation_key = string_hinduism_ms_SP
		trigger = { religion = hinduism }
	}
	text = {
		localisation_key = string_BHAKTI_ms_SP
		trigger = { religion = BHAKTI }
	}
	text = {
		localisation_key = string_sikhism_ms_SP
		trigger = { religion = sikhism }
	}
	text = {
		localisation_key = string_MASANDIS_ms_SP
		trigger = { religion = MASANDIS }
	}
	text = {
		localisation_key = string_animism_ms_SP
		trigger = { religion = animism }
	}
	text = {
		localisation_key = string_SNAKE_CLAN_ms_SP
		trigger = { religion = SNAKE_CLAN }
	}
	text = {
		localisation_key = string_shamanism_ms_SP
		trigger = { religion = shamanism }
	}
	text = {
		localisation_key = string_GOAT_SKULL_ms_SP
		trigger = { religion = GOAT_SKULL }
	}
	text = {
		localisation_key = string_totemism_ms_SP
		trigger = { religion = totemism }
	}
	text = {
		localisation_key = string_BEAR_SPIRIT_ms_SP
		trigger = { religion = BEAR_SPIRIT }
	}
	text = {
		localisation_key = string_inti_ms_SP
		trigger = { religion = inti }
	}
	text = {
		localisation_key = string_INTI_HERETIC_ms_SP
		trigger = { religion = INTI_HERETIC }
	}
	text = {
		localisation_key = string_nahuatl_ms_SP
		trigger = { religion = nahuatl }
	}
	text = {
		localisation_key = string_NAHUATL_HERETIC_ms_SP
		trigger = { religion = NAHUATL_HERETIC }
	}
	text = {
		localisation_key = string_mesoamerican_religion_ms_SP
		trigger = { religion = mesoamerican_religion }
	}
	text = {
		localisation_key = string_MESOAMERICAN_HERETIC_ms_SP
		trigger = { religion = MESOAMERICAN_HERETIC }
	}
	text = {
		localisation_key = string_norse_pagan_reformed_ms_SP
		trigger = { religion = norse_pagan_reformed }
	}
	text = {
		localisation_key = string_OLD_NORSE_ms_SP
		trigger = { religion = OLD_NORSE }
	}
	text = {
		localisation_key = string_tengri_pagan_reformed_ms_SP
		trigger = { religion = tengri_pagan_reformed }
	}
	text = {
		localisation_key = string_OLD_TENGRI_ms_SP
		trigger = { religion = OLD_TENGRI }
	}
	text = {
		localisation_key = string_jewish_ms_SP
		trigger = { religion = jewish }
	}
	text = {
		localisation_key = string_SAMARITAN_ms_SP
		trigger = { religion = SAMARITAN }
	}
	text = {
		localisation_key = string_KARAITE_ms_SP
		trigger = { religion = KARAITE }
	}
	text = {
		localisation_key = string_MAZDAKI_ms_SP
		trigger = { religion = MAZDAKI }
	}
	text = {
		localisation_key = string_MANICHEAN_ms_SP
		trigger = { religion = MANICHEAN }
	}
}


### Ex: "[Catholic]" => "[católica]" (singular feminine / feminino singular)
defined_text = {
	name = GetReligionFS
	text = {
		localisation_key = string_catholic_fs_SP
		trigger = { religion = catholic }
	}
	text = {
		localisation_key = string_BOGOMILIST_fs_SP
		trigger = { religion = BOGOMILIST }
	}
	text = {
		localisation_key = string_WALDENSIAN_fs_SP
		trigger = { religion = WALDENSIAN }
	}
	text = {
		localisation_key = string_SPATICELLI_fs_SP
		trigger = { religion = FRATICELLI }
	}
	text = {
		localisation_key = string_HUSSITE_fs_SP
		trigger = { religion = HUSSITE }
	}
	text = {
		localisation_key = string_LOLLARD_fs_SP
		trigger = { religion = LOLLARD }
	}
	text = {
		localisation_key = string_SOCINIAN_fs_SP
		trigger = { religion = SOCINIAN }
	}
	text = {
		localisation_key = string_protestant_fs_SP
		trigger = { religion = protestant }
	}
	text = {
		localisation_key = string_PENTECOSTAL_fs_SP
		trigger = { religion = PENTECOSTAL }
	}
	text = {
		localisation_key = string_PURITAN_fs_SP
		trigger = { religion = PURITAN }
	}
	text = {
		localisation_key = string_CONGREGATIONALIST_fs_SP
		trigger = { religion = CONGREGATIONALIST }
	}
	text = {
		localisation_key = string_reformed_fs_SP
		trigger = { religion = reformed }
	}
	text = {
		localisation_key = string_METHODIST_fs_SP
		trigger = { religion = METHODIST }
	}
	text = {
		localisation_key = string_BAPTIST_fs_SP
		trigger = { religion = BAPTIST }
	}
	text = {
		localisation_key = string_QUAKER_fs_SP
		trigger = { religion = QUAKER }
	}
	text = {
		localisation_key = string_orthodox_fs_SP
		trigger = { religion = orthodox }
	}
	text = {
		localisation_key = string_OLD_BELIEVER_fs_SP
		trigger = { religion = OLD_BELIEVER }
	}
	text = {
		localisation_key = string_MOLOKAN_fs_SP
		trigger = { religion = MOLOKAN }
	}
	text = {
		localisation_key = string_DUKHOBOR_fs_SP
		trigger = { religion = DUKHOBOR }
	}
	text = {
		localisation_key = string_KHLYST_fs_SP
		trigger = { religion = KHLYST }
	}
	text = {
		localisation_key = string_SKOPTSY_fs_SP
		trigger = { religion = SKOPTSY }
	}
	text = {
		localisation_key = string_ICONOCLAST_fs_SP
		trigger = { religion = ICONOCLAST }
	}
	text = {
		localisation_key = string_coptic_fs_SP
		trigger = { religion = coptic }
	}
	text = {
		localisation_key = string_ZAMIKAELITES_fs_SP
		trigger = { religion = ZAMIKAELITES }
	}
	text = {
		localisation_key = string_STEPHANITES_fs_SP
		trigger = { religion = STEPHANITES }
	}
	text = {
		localisation_key = string_EUSTATHIANS_fs_SP
		trigger = { religion = EUSTATHIANS }
	}
	text = {
		localisation_key = string_sunni_fs_SP
		trigger = { religion = sunni }
	}
	text = {
		localisation_key = string_BEKTASHI_fs_SP
		trigger = { religion = BEKTASHI }
	}
	text = {
		localisation_key = string_AHMADI_fs_SP
		trigger = { religion = AHMADI }
	}
	text = {
		localisation_key = string_ZIKRI_fs_SP
		trigger = { religion = ZIKRI }
	}
	text = {
		localisation_key = string_YAZIDI_fs_SP
		trigger = { religion = YAZIDI }
	}
	text = {
		localisation_key = string_shiite_fs_SP
		trigger = { religion = shiite }
	}
	text = {
		localisation_key = string_DRUZE_fs_SP
		trigger = { religion = DRUZE }
	}
	text = {
		localisation_key = string_HURUFI_fs_SP
		trigger = { religion = HURUFI }
	}
	text = {
		localisation_key = string_ZAIDI_fs_SP
		trigger = { religion = ZAIDI }
	}
	text = {
		localisation_key = string_ibadi_fs_SP
		trigger = { religion = ibadi }
	}
	text = {
		localisation_key = string_HARURI_fs_SP
		trigger = { religion = HARURI }
	}
	text = {
		localisation_key = string_SUFRI_fs_SP
		trigger = { religion = SUFRI }
	}
	text = {
		localisation_key = string_NAJADAT_fs_SP
		trigger = { religion = NAJADAT }
	}
	text = {
		localisation_key = string_AZRAQI_fs_SP
		trigger = { religion = AZRAQI }
	}
	text = {
		localisation_key = string_buddhism_fs_SP
		trigger = { religion = buddhism }
	}
	text = {
		localisation_key = string_ZEN_fs_SP
		trigger = { religion = ZEN }
	}
	text = {
		localisation_key = string_vajrayana_fs_SP
		trigger = { religion = vajrayana }
	}
	text = {
		localisation_key = string_mahayana_fs_SP
		trigger = { religion = mahayana }
	}
	text = {
		localisation_key = string_confucianism_fs_SP
		trigger = { religion = confucianism }
	}
	text = {
		localisation_key = string_TAOIST_fs_SP
		trigger = { religion = TAOIST }
	}
	text = {
		localisation_key = string_shinto_fs_SP
		trigger = { religion = shinto }
	}
	text = {
		localisation_key = string_SHUGENDO_fs_SP
		trigger = { religion = SHUGENDO }
	}
	text = {
		localisation_key = string_hinduism_fs_SP
		trigger = { religion = hinduism }
	}
	text = {
		localisation_key = string_BHAKTI_fs_SP
		trigger = { religion = BHAKTI }
	}
	text = {
		localisation_key = string_sikhism_fs_SP
		trigger = { religion = sikhism }
	}
	text = {
		localisation_key = string_MASANDIS_fs_SP
		trigger = { religion = MASANDIS }
	}
	text = {
		localisation_key = string_animism_fs_SP
		trigger = { religion = animism }
	}
	text = {
		localisation_key = string_SNAKE_CLAN_fs_SP
		trigger = { religion = SNAKE_CLAN }
	}
	text = {
		localisation_key = string_shamanism_fs_SP
		trigger = { religion = shamanism }
	}
	text = {
		localisation_key = string_GOAT_SKULL_fs_SP
		trigger = { religion = GOAT_SKULL }
	}
	text = {
		localisation_key = string_totemism_fs_SP
		trigger = { religion = totemism }
	}
	text = {
		localisation_key = string_BEAR_SPIRIT_fs_SP
		trigger = { religion = BEAR_SPIRIT }
	}
	text = {
		localisation_key = string_inti_fs_SP
		trigger = { religion = inti }
	}
	text = {
		localisation_key = string_INTI_HERETIC_fs_SP
		trigger = { religion = INTI_HERETIC }
	}
	text = {
		localisation_key = string_nahuatl_fs_SP
		trigger = { religion = nahuatl }
	}
	text = {
		localisation_key = string_NAHUATL_HERETIC_fs_SP
		trigger = { religion = NAHUATL_HERETIC }
	}
	text = {
		localisation_key = string_mesoamerican_religion_fs_SP
		trigger = { religion = mesoamerican_religion }
	}
	text = {
		localisation_key = string_MESOAMERICAN_HERETIC_fs_SP
		trigger = { religion = MESOAMERICAN_HERETIC }
	}
	text = {
		localisation_key = string_norse_pagan_reformed_fs_SP
		trigger = { religion = norse_pagan_reformed }
	}
	text = {
		localisation_key = string_OLD_NORSE_fs_SP
		trigger = { religion = OLD_NORSE }
	}
	text = {
		localisation_key = string_tengri_pagan_reformed_fs_SP
		trigger = { religion = tengri_pagan_reformed }
	}
	text = {
		localisation_key = string_OLD_TENGRI_fs_SP
		trigger = { religion = OLD_TENGRI }
	}
	text = {
		localisation_key = string_jewish_fs_SP
		trigger = { religion = jewish }
	}
	text = {
		localisation_key = string_SAMARITAN_fs_SP
		trigger = { religion = SAMARITAN }
	}
	text = {
		localisation_key = string_KARAITE_fs_SP
		trigger = { religion = KARAITE }
	}
	text = {
		localisation_key = string_MAZDAKI_fs_SP
		trigger = { religion = MAZDAKI }
	}
	text = {
		localisation_key = string_MANICHEAN_fs_SP
		trigger = { religion = MANICHEAN }
	}
}


### Ex: "[Catholic]" => "[católicos]" (plural masculine / masculino plural)
defined_text = {
	name = GetReligionMP
	text = {
		localisation_key = string_catholic_mp_SP
		trigger = { religion = catholic }
	}
	text = {
		localisation_key = string_BOGOMILIST_mp_SP
		trigger = { religion = BOGOMILIST }
	}
	text = {
		localisation_key = string_WALDENSIAN_mp_SP
		trigger = { religion = WALDENSIAN }
	}
	text = {
		localisation_key = string_SPATICELLI_mp_SP
		trigger = { religion = FRATICELLI }
	}
	text = {
		localisation_key = string_HUSSITE_mp_SP
		trigger = { religion = HUSSITE }
	}
	text = {
		localisation_key = string_LOLLARD_mp_SP
		trigger = { religion = LOLLARD }
	}
	text = {
		localisation_key = string_SOCINIAN_mp_SP
		trigger = { religion = SOCINIAN }
	}
	text = {
		localisation_key = string_protestant_mp_SP
		trigger = { religion = protestant }
	}
	text = {
		localisation_key = string_PENTECOSTAL_mp_SP
		trigger = { religion = PENTECOSTAL }
	}
	text = {
		localisation_key = string_PURITAN_mp_SP
		trigger = { religion = PURITAN }
	}
	text = {
		localisation_key = string_CONGREGATIONALIST_mp_SP
		trigger = { religion = CONGREGATIONALIST }
	}
	text = {
		localisation_key = string_reformed_mp_SP
		trigger = { religion = reformed }
	}
	text = {
		localisation_key = string_METHODIST_mp_SP
		trigger = { religion = METHODIST }
	}
	text = {
		localisation_key = string_BAPTIST_mp_SP
		trigger = { religion = BAPTIST }
	}
	text = {
		localisation_key = string_QUAKER_mp_SP
		trigger = { religion = QUAKER }
	}
	text = {
		localisation_key = string_orthodox_mp_SP
		trigger = { religion = orthodox }
	}
	text = {
		localisation_key = string_OLD_BELIEVER_mp_SP
		trigger = { religion = OLD_BELIEVER }
	}
	text = {
		localisation_key = string_MOLOKAN_mp_SP
		trigger = { religion = MOLOKAN }
	}
	text = {
		localisation_key = string_DUKHOBOR_mp_SP
		trigger = { religion = DUKHOBOR }
	}
	text = {
		localisation_key = string_KHLYST_mp_SP
		trigger = { religion = KHLYST }
	}
	text = {
		localisation_key = string_SKOPTSY_mp_SP
		trigger = { religion = SKOPTSY }
	}
	text = {
		localisation_key = string_ICONOCLAST_mp_SP
		trigger = { religion = ICONOCLAST }
	}
	text = {
		localisation_key = string_coptic_mp_SP
		trigger = { religion = coptic }
	}
	text = {
		localisation_key = string_ZAMIKAELITES_mp_SP
		trigger = { religion = ZAMIKAELITES }
	}
	text = {
		localisation_key = string_STEPHANITES_mp_SP
		trigger = { religion = STEPHANITES }
	}
	text = {
		localisation_key = string_EUSTATHIANS_mp_SP
		trigger = { religion = EUSTATHIANS }
	}
	text = {
		localisation_key = string_sunni_mp_SP
		trigger = { religion = sunni }
	}
	text = {
		localisation_key = string_BEKTASHI_mp_SP
		trigger = { religion = BEKTASHI }
	}
	text = {
		localisation_key = string_AHMADI_mp_SP
		trigger = { religion = AHMADI }
	}
	text = {
		localisation_key = string_ZIKRI_mp_SP
		trigger = { religion = ZIKRI }
	}
	text = {
		localisation_key = string_YAZIDI_mp_SP
		trigger = { religion = YAZIDI }
	}
	text = {
		localisation_key = string_shiite_mp_SP
		trigger = { religion = shiite }
	}
	text = {
		localisation_key = string_DRUZE_mp_SP
		trigger = { religion = DRUZE }
	}
	text = {
		localisation_key = string_HURUFI_mp_SP
		trigger = { religion = HURUFI }
	}
	text = {
		localisation_key = string_ZAIDI_mp_SP
		trigger = { religion = ZAIDI }
	}
	text = {
		localisation_key = string_ibadi_mp_SP
		trigger = { religion = ibadi }
	}
	text = {
		localisation_key = string_HARURI_mp_SP
		trigger = { religion = HARURI }
	}
	text = {
		localisation_key = string_SUFRI_mp_SP
		trigger = { religion = SUFRI }
	}
	text = {
		localisation_key = string_NAJADAT_mp_SP
		trigger = { religion = NAJADAT }
	}
	text = {
		localisation_key = string_AZRAQI_mp_SP
		trigger = { religion = AZRAQI }
	}
	text = {
		localisation_key = string_buddhism_mp_SP
		trigger = { religion = buddhism }
	}
	text = {
		localisation_key = string_ZEN_mp_SP
		trigger = { religion = ZEN }
	}
	text = {
		localisation_key = string_vajrayana_mp_SP
		trigger = { religion = vajrayana }
	}
	text = {
		localisation_key = string_mahayana_mp_SP
		trigger = { religion = mahayana }
	}
	text = {
		localisation_key = string_confucianism_mp_SP
		trigger = { religion = confucianism }
	}
	text = {
		localisation_key = string_TAOIST_mp_SP
		trigger = { religion = TAOIST }
	}
	text = {
		localisation_key = string_shinto_mp_SP
		trigger = { religion = shinto }
	}
	text = {
		localisation_key = string_SHUGENDO_mp_SP
		trigger = { religion = SHUGENDO }
	}
	text = {
		localisation_key = string_hinduism_mp_SP
		trigger = { religion = hinduism }
	}
	text = {
		localisation_key = string_BHAKTI_mp_SP
		trigger = { religion = BHAKTI }
	}
	text = {
		localisation_key = string_sikhism_mp_SP
		trigger = { religion = sikhism }
	}
	text = {
		localisation_key = string_MASANDIS_mp_SP
		trigger = { religion = MASANDIS }
	}
	text = {
		localisation_key = string_animism_mp_SP
		trigger = { religion = animism }
	}
	text = {
		localisation_key = string_SNAKE_CLAN_mp_SP
		trigger = { religion = SNAKE_CLAN }
	}
	text = {
		localisation_key = string_shamanism_mp_SP
		trigger = { religion = shamanism }
	}
	text = {
		localisation_key = string_GOAT_SKULL_mp_SP
		trigger = { religion = GOAT_SKULL }
	}
	text = {
		localisation_key = string_totemism_mp_SP
		trigger = { religion = totemism }
	}
	text = {
		localisation_key = string_BEAR_SPIRIT_mp_SP
		trigger = { religion = BEAR_SPIRIT }
	}
	text = {
		localisation_key = string_inti_mp_SP
		trigger = { religion = inti }
	}
	text = {
		localisation_key = string_INTI_HERETIC_mp_SP
		trigger = { religion = INTI_HERETIC }
	}
	text = {
		localisation_key = string_nahuatl_mp_SP
		trigger = { religion = nahuatl }
	}
	text = {
		localisation_key = string_NAHUATL_HERETIC_mp_SP
		trigger = { religion = NAHUATL_HERETIC }
	}
	text = {
		localisation_key = string_mesoamerican_religion_mp_SP
		trigger = { religion = mesoamerican_religion }
	}
	text = {
		localisation_key = string_MESOAMERICAN_HERETIC_mp_SP
		trigger = { religion = MESOAMERICAN_HERETIC }
	}
	text = {
		localisation_key = string_norse_pagan_reformed_mp_SP
		trigger = { religion = norse_pagan_reformed }
	}
	text = {
		localisation_key = string_OLD_NORSE_mp_SP
		trigger = { religion = OLD_NORSE }
	}
	text = {
		localisation_key = string_tengri_pagan_reformed_mp_SP
		trigger = { religion = tengri_pagan_reformed }
	}
	text = {
		localisation_key = string_OLD_TENGRI_mp_SP
		trigger = { religion = OLD_TENGRI }
	}
	text = {
		localisation_key = string_jewish_mp_SP
		trigger = { religion = jewish }
	}
	text = {
		localisation_key = string_SAMARITAN_mp_SP
		trigger = { religion = SAMARITAN }
	}
	text = {
		localisation_key = string_KARAITE_mp_SP
		trigger = { religion = KARAITE }
	}
	text = {
		localisation_key = string_MAZDAKI_mp_SP
		trigger = { religion = MAZDAKI }
	}
	text = {
		localisation_key = string_MANICHEAN_mp_SP
		trigger = { religion = MANICHEAN }
	}
}


### Ex: "[Catholic]" => "[católicas]" (plural feminine / feminino plural)
defined_text = {
	name = GetReligionFP
	text = {
		localisation_key = string_catholic_fp_SP
		trigger = { religion = catholic }
	}
	text = {
		localisation_key = string_BOGOMILIST_fp_SP
		trigger = { religion = BOGOMILIST }
	}
	text = {
		localisation_key = string_WALDENSIAN_fp_SP
		trigger = { religion = WALDENSIAN }
	}
	text = {
		localisation_key = string_SPATICELLI_fp_SP
		trigger = { religion = FRATICELLI }
	}
	text = {
		localisation_key = string_HUSSITE_fp_SP
		trigger = { religion = HUSSITE }
	}
	text = {
		localisation_key = string_LOLLARD_fp_SP
		trigger = { religion = LOLLARD }
	}
	text = {
		localisation_key = string_SOCINIAN_fp_SP
		trigger = { religion = SOCINIAN }
	}
	text = {
		localisation_key = string_protestant_fp_SP
		trigger = { religion = protestant }
	}
	text = {
		localisation_key = string_PENTECOSTAL_fp_SP
		trigger = { religion = PENTECOSTAL }
	}
	text = {
		localisation_key = string_PURITAN_fp_SP
		trigger = { religion = PURITAN }
	}
	text = {
		localisation_key = string_CONGREGATIONALIST_fp_SP
		trigger = { religion = CONGREGATIONALIST }
	}
	text = {
		localisation_key = string_reformed_fp_SP
		trigger = { religion = reformed }
	}
	text = {
		localisation_key = string_METHODIST_fp_SP
		trigger = { religion = METHODIST }
	}
	text = {
		localisation_key = string_BAPTIST_fp_SP
		trigger = { religion = BAPTIST }
	}
	text = {
		localisation_key = string_QUAKER_fp_SP
		trigger = { religion = QUAKER }
	}
	text = {
		localisation_key = string_orthodox_fp_SP
		trigger = { religion = orthodox }
	}
	text = {
		localisation_key = string_OLD_BELIEVER_fp_SP
		trigger = { religion = OLD_BELIEVER }
	}
	text = {
		localisation_key = string_MOLOKAN_fp_SP
		trigger = { religion = MOLOKAN }
	}
	text = {
		localisation_key = string_DUKHOBOR_fp_SP
		trigger = { religion = DUKHOBOR }
	}
	text = {
		localisation_key = string_KHLYST_fp_SP
		trigger = { religion = KHLYST }
	}
	text = {
		localisation_key = string_SKOPTSY_fp_SP
		trigger = { religion = SKOPTSY }
	}
	text = {
		localisation_key = string_ICONOCLAST_fp_SP
		trigger = { religion = ICONOCLAST }
	}
	text = {
		localisation_key = string_coptic_fp_SP
		trigger = { religion = coptic }
	}
	text = {
		localisation_key = string_ZAMIKAELITES_fp_SP
		trigger = { religion = ZAMIKAELITES }
	}
	text = {
		localisation_key = string_STEPHANITES_fp_SP
		trigger = { religion = STEPHANITES }
	}
	text = {
		localisation_key = string_EUSTATHIANS_fp_SP
		trigger = { religion = EUSTATHIANS }
	}
	text = {
		localisation_key = string_sunni_fp_SP
		trigger = { religion = sunni }
	}
	text = {
		localisation_key = string_BEKTASHI_fp_SP
		trigger = { religion = BEKTASHI }
	}
	text = {
		localisation_key = string_AHMADI_fp_SP
		trigger = { religion = AHMADI }
	}
	text = {
		localisation_key = string_ZIKRI_fp_SP
		trigger = { religion = ZIKRI }
	}
	text = {
		localisation_key = string_YAZIDI_fp_SP
		trigger = { religion = YAZIDI }
	}
	text = {
		localisation_key = string_shiite_fp_SP
		trigger = { religion = shiite }
	}
	text = {
		localisation_key = string_DRUZE_fp_SP
		trigger = { religion = DRUZE }
	}
	text = {
		localisation_key = string_HURUFI_fp_SP
		trigger = { religion = HURUFI }
	}
	text = {
		localisation_key = string_ZAIDI_fp_SP
		trigger = { religion = ZAIDI }
	}
	text = {
		localisation_key = string_ibadi_fp_SP
		trigger = { religion = ibadi }
	}
	text = {
		localisation_key = string_HARURI_fp_SP
		trigger = { religion = HARURI }
	}
	text = {
		localisation_key = string_SUFRI_fp_SP
		trigger = { religion = SUFRI }
	}
	text = {
		localisation_key = string_NAJADAT_fp_SP
		trigger = { religion = NAJADAT }
	}
	text = {
		localisation_key = string_AZRAQI_fp_SP
		trigger = { religion = AZRAQI }
	}
	text = {
		localisation_key = string_buddhism_fp_SP
		trigger = { religion = buddhism }
	}
	text = {
		localisation_key = string_ZEN_fp_SP
		trigger = { religion = ZEN }
	}
	text = {
		localisation_key = string_vajrayana_fp_SP
		trigger = { religion = vajrayana }
	}
	text = {
		localisation_key = string_mahayana_fp_SP
		trigger = { religion = mahayana }
	}
	text = {
		localisation_key = string_confucianism_fp_SP
		trigger = { religion = confucianism }
	}
	text = {
		localisation_key = string_TAOIST_fp_SP
		trigger = { religion = TAOIST }
	}
	text = {
		localisation_key = string_shinto_fp_SP
		trigger = { religion = shinto }
	}
	text = {
		localisation_key = string_SHUGENDO_fp_SP
		trigger = { religion = SHUGENDO }
	}
	text = {
		localisation_key = string_hinduism_fp_SP
		trigger = { religion = hinduism }
	}
	text = {
		localisation_key = string_BHAKTI_fp_SP
		trigger = { religion = BHAKTI }
	}
	text = {
		localisation_key = string_sikhism_fp_SP
		trigger = { religion = sikhism }
	}
	text = {
		localisation_key = string_MASANDIS_fp_SP
		trigger = { religion = MASANDIS }
	}
	text = {
		localisation_key = string_animism_fp_SP
		trigger = { religion = animism }
	}
	text = {
		localisation_key = string_SNAKE_CLAN_fp_SP
		trigger = { religion = SNAKE_CLAN }
	}
	text = {
		localisation_key = string_shamanism_fp_SP
		trigger = { religion = shamanism }
	}
	text = {
		localisation_key = string_GOAT_SKULL_fp_SP
		trigger = { religion = GOAT_SKULL }
	}
	text = {
		localisation_key = string_totemism_fp_SP
		trigger = { religion = totemism }
	}
	text = {
		localisation_key = string_BEAR_SPIRIT_fp_SP
		trigger = { religion = BEAR_SPIRIT }
	}
	text = {
		localisation_key = string_inti_fp_SP
		trigger = { religion = inti }
	}
	text = {
		localisation_key = string_INTI_HERETIC_fp_SP
		trigger = { religion = INTI_HERETIC }
	}
	text = {
		localisation_key = string_nahuatl_fp_SP
		trigger = { religion = nahuatl }
	}
	text = {
		localisation_key = string_NAHUATL_HERETIC_fp_SP
		trigger = { religion = NAHUATL_HERETIC }
	}
	text = {
		localisation_key = string_mesoamerican_religion_fp_SP
		trigger = { religion = mesoamerican_religion }
	}
	text = {
		localisation_key = string_MESOAMERICAN_HERETIC_fp_SP
		trigger = { religion = MESOAMERICAN_HERETIC }
	}
	text = {
		localisation_key = string_norse_pagan_reformed_fp_SP
		trigger = { religion = norse_pagan_reformed }
	}
	text = {
		localisation_key = string_OLD_NORSE_fp_SP
		trigger = { religion = OLD_NORSE }
	}
	text = {
		localisation_key = string_tengri_pagan_reformed_fp_SP
		trigger = { religion = tengri_pagan_reformed }
	}
	text = {
		localisation_key = string_OLD_TENGRI_fp_SP
		trigger = { religion = OLD_TENGRI }
	}
	text = {
		localisation_key = string_jewish_fp_SP
		trigger = { religion = jewish }
	}
	text = {
		localisation_key = string_SAMARITAN_fp_SP
		trigger = { religion = SAMARITAN }
	}
	text = {
		localisation_key = string_KARAITE_fp_SP
		trigger = { religion = KARAITE }
	}
	text = {
		localisation_key = string_MAZDAKI_fp_SP
		trigger = { religion = MAZDAKI }
	}
	text = {
		localisation_key = string_MANICHEAN_fp_SP
		trigger = { religion = MANICHEAN }
	}
}


### Ex: "[the] Catholicism/Orthodoxy" => "[el] catolicismo/[la] ortodoxia"
defined_text = {
	name = GetellaReligion
	text = {
		localisation_key = string_el_SP
		trigger = {
			OR = { # TODO: all feminine names in this list have to be inserted under the following trigger
				religion = BAPTIST religion = BEAR_SPIRIT religion = BEKTASHI religion = BHAKTI religion = BOGOMILIST religion = buddhism religion = catholic
				religion = confucianism religion = CONGREGATIONALIST religion = coptic religion = DRUZE religion = DUKHOBOR religion = EUSTATHIANS
				religion = FRATICELLI religion = GOAT_SKULL religion = HARURI religion = HURUFI religion = INTI_HERETIC religion = jewish religion = KARAITE
				religion = KHLYST religion = LOLLARD religion = mahayana religion = MANICHEAN religion = MASANDIS religion = MAZDAKI
				religion = MESOAMERICAN_HERETIC religion = mesoamerican_religion religion = METHODIST religion = MOLOKAN religion = nahuatl
				religion = NAHUATL_HERETIC religion = NAJADAT religion = norse_pagan_reformed religion = OLD_NORSE religion = OLD_TENGRI religion = PENTECOSTAL
				religion = protestant religion = PURITAN religion = QUAKER religion = SAMARITAN religion = shamanism religion = shiite religion = shinto
				religion = SHUGENDO religion = sikhism religion = SKOPTSY religion = SNAKE_CLAN religion = SOCINIAN religion = STEPHANITES religion = SUFRI
				religion = sunni religion = TAOIST religion = tengri_pagan_reformed religion = totemism religion = vajrayana religion = WALDENSIAN
				religion = YAZIDI religion = ZAIDI religion = ZAMIKAELITES religion = ZEN religion = ZIKRI
			}
		}
	}
	text = {
		localisation_key = string_la_SP
		trigger = {
			OR = {
				religion = reformed religion = OLD_BELIEVER
			}
		}
	}
}
### Ex: "[the] Catholicism/Orthodoxy" => "[el] catolicismo/[la] ortodoxia"
defined_text = {
	name = GetElLaReligion
	text = {
		localisation_key = string_El_SP
		trigger = {
			OR = { # TODO: all feminine names in this list have to be inserted under the following trigger
				religion = BAPTIST religion = BEAR_SPIRIT religion = BEKTASHI religion = BHAKTI religion = BOGOMILIST religion = buddhism religion = catholic
				religion = confucianism religion = CONGREGATIONALIST religion = coptic religion = DRUZE religion = DUKHOBOR religion = EUSTATHIANS
				religion = FRATICELLI religion = GOAT_SKULL religion = HARURI religion = HURUFI religion = INTI_HERETIC religion = jewish religion = KARAITE
				religion = KHLYST religion = LOLLARD religion = mahayana religion = MANICHEAN religion = MASANDIS religion = MAZDAKI
				religion = MESOAMERICAN_HERETIC religion = mesoamerican_religion religion = METHODIST religion = MOLOKAN religion = nahuatl
				religion = NAHUATL_HERETIC religion = NAJADAT religion = norse_pagan_reformed religion = OLD_NORSE religion = OLD_TENGRI religion = PENTECOSTAL
				religion = protestant religion = PURITAN religion = QUAKER religion = SAMARITAN religion = shamanism religion = shiite religion = shinto
				religion = SHUGENDO religion = sikhism religion = SKOPTSY religion = SNAKE_CLAN religion = SOCINIAN religion = STEPHANITES religion = SUFRI
				religion = sunni religion = TAOIST religion = tengri_pagan_reformed religion = totemism religion = vajrayana religion = WALDENSIAN
				religion = YAZIDI religion = ZAIDI religion = ZAMIKAELITES religion = ZEN religion = ZIKRI
			}
		}
	}
	text = {
		localisation_key = string_La_SP
		trigger = {
			OR = {
				religion = reformed religion = OLD_BELIEVER
			}
		}
	}
}


### Ex: "[the] Catholicism/Orthodoxy" => "[del] catolicismo/[de la] ortodoxia"
defined_text = {
	name = GetdeldelaReligion
	text = {
		localisation_key = string_del_SP
		trigger = {
			OR = { # TODO: all feminine names in this list have to be inserted under the following trigger
				religion = BAPTIST religion = BEAR_SPIRIT religion = BEKTASHI religion = BHAKTI religion = BOGOMILIST religion = buddhism religion = catholic
				religion = confucianism religion = CONGREGATIONALIST religion = coptic religion = DRUZE religion = DUKHOBOR religion = EUSTATHIANS
				religion = FRATICELLI religion = GOAT_SKULL religion = HARURI religion = HURUFI religion = INTI_HERETIC religion = jewish religion = KARAITE
				religion = KHLYST religion = LOLLARD religion = mahayana religion = MANICHEAN religion = MASANDIS religion = MAZDAKI
				religion = MESOAMERICAN_HERETIC religion = mesoamerican_religion religion = METHODIST religion = MOLOKAN religion = nahuatl
				religion = NAHUATL_HERETIC religion = NAJADAT religion = norse_pagan_reformed religion = OLD_NORSE religion = OLD_TENGRI religion = PENTECOSTAL
				religion = protestant religion = PURITAN religion = QUAKER religion = SAMARITAN religion = shamanism religion = shiite religion = shinto
				religion = SHUGENDO religion = sikhism religion = SKOPTSY religion = SNAKE_CLAN religion = SOCINIAN religion = STEPHANITES religion = SUFRI
				religion = sunni religion = TAOIST religion = tengri_pagan_reformed religion = totemism religion = vajrayana religion = WALDENSIAN
				religion = YAZIDI religion = ZAIDI religion = ZAMIKAELITES religion = ZEN religion = ZIKRI
			}
		}
	}
	text = {
		localisation_key = string_dela_SP
		trigger = {
			OR = {
				religion = reformed religion = OLD_BELIEVER
			}
		}
	}
}
### Ex: "[the] Catholicism/Orthodoxy" => "[Del] catolicismo/[De la] ortodoxia"
defined_text = {
	name = GetDelDelaReligion
	text = {
		localisation_key = string_Del_SP
		trigger = {
			OR = { # TODO: all feminine names in this list have to be inserted under the following trigger
				religion = BAPTIST religion = BEAR_SPIRIT religion = BEKTASHI religion = BHAKTI religion = BOGOMILIST religion = buddhism religion = catholic
				religion = confucianism religion = CONGREGATIONALIST religion = coptic religion = DRUZE religion = DUKHOBOR religion = EUSTATHIANS
				religion = FRATICELLI religion = GOAT_SKULL religion = HARURI religion = HURUFI religion = INTI_HERETIC religion = jewish religion = KARAITE
				religion = KHLYST religion = LOLLARD religion = mahayana religion = MANICHEAN religion = MASANDIS religion = MAZDAKI
				religion = MESOAMERICAN_HERETIC religion = mesoamerican_religion religion = METHODIST religion = MOLOKAN religion = nahuatl
				religion = NAHUATL_HERETIC religion = NAJADAT religion = norse_pagan_reformed religion = OLD_NORSE religion = OLD_TENGRI religion = PENTECOSTAL
				religion = protestant religion = PURITAN religion = QUAKER religion = SAMARITAN religion = shamanism religion = shiite religion = shinto
				religion = SHUGENDO religion = sikhism religion = SKOPTSY religion = SNAKE_CLAN religion = SOCINIAN religion = STEPHANITES religion = SUFRI
				religion = sunni religion = TAOIST religion = tengri_pagan_reformed religion = totemism religion = vajrayana religion = WALDENSIAN
				religion = YAZIDI religion = ZAIDI religion = ZAMIKAELITES religion = ZEN religion = ZIKRI
			}
		}
	}
	text = {
		localisation_key = string_Dela_SP
		trigger = {
			OR = {
				religion = reformed religion = OLD_BELIEVER
			}
		}
	}
}


### Ex: "[the] Catholicism/Orthodoxy" => "[al] catolicismo/[a la] ortodoxia"
defined_text = {
	name = GetalalaReligion
	text = {
		localisation_key = string_al_SP
		trigger = {
			OR = { # TODO: all feminine names in this list have to be inserted under the following trigger
				religion = BAPTIST religion = BEAR_SPIRIT religion = BEKTASHI religion = BHAKTI religion = BOGOMILIST religion = buddhism religion = catholic
				religion = confucianism religion = CONGREGATIONALIST religion = coptic religion = DRUZE religion = DUKHOBOR religion = EUSTATHIANS
				religion = FRATICELLI religion = GOAT_SKULL religion = HARURI religion = HURUFI religion = INTI_HERETIC religion = jewish religion = KARAITE
				religion = KHLYST religion = LOLLARD religion = mahayana religion = MANICHEAN religion = MASANDIS religion = MAZDAKI
				religion = MESOAMERICAN_HERETIC religion = mesoamerican_religion religion = METHODIST religion = MOLOKAN religion = nahuatl
				religion = NAHUATL_HERETIC religion = NAJADAT religion = norse_pagan_reformed religion = OLD_NORSE religion = OLD_TENGRI religion = PENTECOSTAL
				religion = protestant religion = PURITAN religion = QUAKER religion = SAMARITAN religion = shamanism religion = shiite religion = shinto
				religion = SHUGENDO religion = sikhism religion = SKOPTSY religion = SNAKE_CLAN religion = SOCINIAN religion = STEPHANITES religion = SUFRI
				religion = sunni religion = TAOIST religion = tengri_pagan_reformed religion = totemism religion = vajrayana religion = WALDENSIAN
				religion = YAZIDI religion = ZAIDI religion = ZAMIKAELITES religion = ZEN religion = ZIKRI
			}
		}
	}
	text = {
		localisation_key = string_ala_SP
		trigger = {
			OR = {
				religion = reformed religion = OLD_BELIEVER
			}
		}
	}
}
### Ex: "[the] Catholicism/Orthodoxy" => "[Al] catolicismo/[A la] ortodoxia"
defined_text = {
	name = GetAlAlaReligion
	text = {
		localisation_key = string_Al_SP
		trigger = {
			OR = { # TODO: all feminine names in this list have to be inserted under the following trigger
				religion = BAPTIST religion = BEAR_SPIRIT religion = BEKTASHI religion = BHAKTI religion = BOGOMILIST religion = buddhism religion = catholic
				religion = confucianism religion = CONGREGATIONALIST religion = coptic religion = DRUZE religion = DUKHOBOR religion = EUSTATHIANS
				religion = FRATICELLI religion = GOAT_SKULL religion = HARURI religion = HURUFI religion = INTI_HERETIC religion = jewish religion = KARAITE
				religion = KHLYST religion = LOLLARD religion = mahayana religion = MANICHEAN religion = MASANDIS religion = MAZDAKI
				religion = MESOAMERICAN_HERETIC religion = mesoamerican_religion religion = METHODIST religion = MOLOKAN religion = nahuatl
				religion = NAHUATL_HERETIC religion = NAJADAT religion = norse_pagan_reformed religion = OLD_NORSE religion = OLD_TENGRI religion = PENTECOSTAL
				religion = protestant religion = PURITAN religion = QUAKER religion = SAMARITAN religion = shamanism religion = shiite religion = shinto
				religion = SHUGENDO religion = sikhism religion = SKOPTSY religion = SNAKE_CLAN religion = SOCINIAN religion = STEPHANITES religion = SUFRI
				religion = sunni religion = TAOIST religion = tengri_pagan_reformed religion = totemism religion = vajrayana religion = WALDENSIAN
				religion = YAZIDI religion = ZAIDI religion = ZAMIKAELITES religion = ZEN religion = ZIKRI
			}
		}
	}
	text = {
		localisation_key = string_Ala_SP
		trigger = {
			OR = {
				religion = reformed religion = OLD_BELIEVER
			}
		}
	}
}


