GetIncomeRuralProdProv = {
	set_variable = { which = $return$ which = wealth_rural_from_production }
}
GetIncomeRuralProdEstate = {
	set_variable = { which = $return$ which = EstateIncome_RuralProd }
}
GetIncomeRuralProdState = {
	set_variable = { which = $return$ which = rural_production_power }
	
	food_price_bonus = yes
	
	multiply_variable = { which = $return$ which = food_price_bonus_cont }
	multiply_variable = { which = $return$ value = 0.8 }
	
	set_variable = { which = food_price_bonus_cont value = 0 }
}

GetIncomeRuralFarmProv = {
	set_variable = { which = $return$ which = food_sale_local }
	change_variable = { which = $return$ which = food_sale_region }
	multiply_variable = { which = $return$ value = 0.8 }
	
	GetIncomeRuralProdState = { return = tmpRuralProd }
	
	change_variable = { which = $return$ which = tmpRuralProd }
	
	set_variable = { which = tmpRuralProd value = 0 }
}
GetIncomeRuralFarmEstate = {
	set_variable = { which = $return$ which = food_sale_local }
	change_variable = { which = $return$ which = food_sale_region }
	multiply_variable = { which = $return$ value = 0.8 }
	
	GetIncomeRuralProdState = { return = tmpRuralProd }
	
	change_variable = { which = $return$ which = tmpRuralProd }
	
	set_variable = { which = tmpRuralProd value = 0 }
}
GetIncomeRuralFarmState = {
	set_variable = { which = $return$ which = food_sale_local }
	change_variable = { which = $return$ which = food_sale_region }
	multiply_variable = { which = $return$ value = 0.8 }
	
	GetIncomeRuralProdState = { return = tmpRuralProd }
	
	change_variable = { which = $return$ which = tmpRuralProd }
	
	set_variable = { which = tmpRuralProd value = 0 }
}

GetIncomeRuralProv = {
	GetIncomeRuralFarmState = { return = $return$ }
	change_variable = { which = $return$ which = wealth_rural_from_pop }
}
GetIncomeRuralEstate = {
	GetIncomeRuralFarmState = { return = $return$ }
	change_variable = { which = $return$ which = wealth_rural_from_pop }
}
GetIncomeRuralState = {
	GetIncomeRuralFarmState = { return = $return$ }
	change_variable = { which = $return$ which = wealth_rural_from_pop }
}

GetIncomeMineProv = {
	set_variable = { which = $return$ which = wealth_from_mines }
}
GetIncomeMineEstate = {
	set_variable = { which = $return$ which = EstateIncome_Mine }
}
GetIncomeMineState = {
	set_variable = { which = $return$ which = mine_power }
	multiply_variable = { which = $return$ which = price_of_metal }
	multiply_variable = { which = $return$ value = 0.2 }
}

GetIncomeTradeProv = {
	set_variable = { which = $return$ which = wealth_urban_from_trade }
}
GetIncomeTradeEstate = {
	set_variable = { which = $return$ which = EstateIncome_Trade }
}
GetIncomeTradeState = {
	set_variable = { which = $return$ which = wealth_urban_from_trade }
	multiply_variable = { which = $return$ value = 4 }
}

GetIncomeProdProv = {
	StatProdUrban = yes
	
	set_variable = { which = $return$ which = statProdUrban }
	multiply_variable = { which = $return$ value = 1.5 }
	
	set_variable = { which = statProdUrban value = 0 }
}
GetIncomeProdEstate = {
	set_variable = { which = $return$ which = EstateIncome_UrbanProd }
}
GetIncomeProdState = {
	StatProdUrban = yes
	
	set_variable = { which = $return$ which = statProdUrban }
	multiply_variable = { which = $return$ value = 3 }
	
	set_variable = { which = statProdUrban value = 0 }
}

GetIncomeUrbanProv = {
	set_variable = { which = $return$ which = wealth_urban_from_pop }
	
	GetIncomeTradeProv = { return = tmpUrbanTradeProv }
	GetIncomeProdProv = { return = tmpUrbanProdProv }
	
	change_variable = { which = $return$ which = tmpUrbanTradeProv }
	change_variable = { which = $return$ which = tmpUrbanProdProv }
	
	set_variable = { which = tmpUrbanTradeProv value = 0 }
	set_variable = { which = tmpUrbanProdProv value = 0 }
}
GetIncomeUrbanEstate = {
	export_to_variable = { which = localAutonomy value = local_autonomy }
	multiply_variable = { which = localAutonomy value = 0.008 }
	change_variable = { which = localAutonomy value = 0.2 }
	
	set_variable = { which = $return$ which = wealth_urban_from_pop }
	
	GetIncomeTradeEstate = { return = tmpUrbanTradeEstate }
	GetIncomeProdEstate = { return = tmpUrbanProdEstate }
	
	change_variable = { which = $return$ which = tmpUrbanTradeEstate }
	change_variable = { which = $return$ which = tmpUrbanProdEstate }
	multiply_variable = { which = $return$ which = localAutonomy }
	
	set_variable = { which = localAutonomy value = 0 }
	set_variable = { which = tmpUrbanTradeEstate value = 0 }
	set_variable = { which = tmpUrbanProdEstate value = 0 }
}
GetIncomeUrbanState = {
	set_variable = { which = $return$ which = wealth_urban_from_pop }
	
	GetIncomeTradeState = { return = tmpUrbanTradeState }
	GetIncomeProdState = { return = tmpUrbanProdState }
	
	change_variable = { which = $return$ which = tmpUrbanTradeState }
	change_variable = { which = $return$ which = tmpUrbanProdState }
	
	set_variable = { which = tmpUrbanTradeState value = 0 }
	set_variable = { which = tmpUrbanProdState value = 0 }
}

GetPropIncrease = {
	set_variable = { which = tempPrev which = $prevVal$ }
	multiply_variable = { which = tempPrev which = $prevMult$ }
	
	set_variable = { which = tempNewValue which = $changeVal$ }
	set_variable = { which = tempNewMult which = $changeMult$ }
	
	change_variable = { which = tempNewValue which = $prevVal$ }
	change_variable = { which = tempNewMult which = $prevMult$ }
	
	set_variable = { which = tempNew which = tempNewValue }
	multiply_variable = { which = tempNew which = tempNewMult }
	
	set_variable = { which = $return$ which = tempNew }
	if = {
		limit = { NOT = { check_variable = { which = tempPrev value = 0.001 } } }
		set_variable = { which = tempPrev value = 0.001 }
	}
	divide_variable = { which = $return$ which = tempPrev }
	subtract_variable = { which = $return$ value = 1 }
	divide_variable = { which = $return$ value = $div$ }
	
	if = {
		limit = { always = $prevClean$ }
		set_variable = { which = $prevVal$ value = 0 }
		set_variable = { which = $prevMult$ value = 0 }
	}
	if = {
		limit = { always = $changeClean$ }
		set_variable = { which = $changeVal$ value = 0 }
		set_variable = { which = $changeMult$ value = 0 }
	}
	
	set_variable = { which = tempPrev value = 0 }
	set_variable = { which = tempNewValue value = 0 }
	set_variable = { which = tempNewMult value = 0 }
	set_variable = { which = tempNew value = 0 }
}

DoPriceModify = {
	get_upgrade_cost_$name$ = yes
	
	multiply_variable = { which = $weight$ value = 1000 }
	divide_variable = { which = $weight$ which = building_cost }
	
	multiply_variable = { which = building_cost which = getBestBuildingCost }
	
	# Can't afford, modify weight
	if = {
		limit = { NOT = { check_variable = { which = getBestBuildingBudget which = building_cost } } }
		# Range between 0.4~0.999
		set_variable = { which = multiplier which = getBestBuildingBudget }
		divide_variable = { which = multiplier which = building_cost }
		multiply_variable = { which = multiplier value = 0.6 }
		change_variable = { which = multiplier value = 0.4 }
		
		multiply_variable = { which = $weight$ which = multiplier }
		
		set_variable = { which = multiplier value = 0 }
	}
	
	set_variable = { which = building_cost value = 0 }
}

AssessBuilding_mines = {
	set_variable = { which = $weight$ value = $productNew$ }
	subtract_variable = { which = $weight$ value = $productCur$ }
	
	GetIncomeMine$root$ = { return = tempIncomeMine }
	
	multiply_variable = { which = $weight$ which = tempIncomeMine }
	divide_variable = { which = $weight$ value = $productCur$ }
	
	# Get effect of urban gravity increase
	set_variable = { which = tempChangeGravVal value = $gravVal$ }
	set_variable = { which = tempChangeGravMult value = $gravMult$ }
	
	GetPropIncrease = {
		changeVal = tempChangeGravVal
		changeMult = tempChangeGravMult
		changeClean = yes
		prevVal = urban_gravity_base
		prevMult = urban_gravity_percentage
		prevClean = no
		div = 2
		return = tempIncreaseGrav
	}
	
	GetIncomeUrban$root$ = { return = tempIncomeUrban }
	
	multiply_variable = { which = tempIncreaseGrav which = getBestBuildingFood }
	multiply_variable = { which = tempIncreaseGrav which = tempIncomeUrban }
	
	change_variable = { which = $weight$ which = tempIncreaseGrav }
	
	DoPriceModify = { name = $name$ weight = $weight$ }
	
	set_variable = { which = tempIncomeMine value = 0 }
	set_variable = { which = tempIncreaseGrav value = 0 }
	set_variable = { which = tempIncomeUrban value = 0 }
}

AssessBuilding_mines_1 = {
	AssessBuilding_mines = {
		name = mines_1
		root = $root$
		weight = $weight$
		productNew = 0.6
		productCur = 0.1
		gravVal = 0.1
		gravMult = 0
	}
}

AssessBuilding_mines_2 = {
	AssessBuilding_mines = {
		name = mines_2
		root = $root$
		weight = $weight$
		productNew = 1.2
		productCur = 0.6
		gravVal = 0.1
		gravMult = 0
	}
}

AssessBuilding_mines_3 = {
	AssessBuilding_mines = {
		name = mines_3
		root = $root$
		weight = $weight$
		productNew = 1.8
		productCur = 1.2
		gravVal = 0.1
		gravMult = 0
	}
}

AssessBuilding_mines_4 = {
	AssessBuilding_mines = {
		name = mines_4
		root = $root$
		weight = $weight$
		productNew = 2.4
		productCur = 1.8
		gravVal = 0.1
		gravMult = 0
	}
}

AssessBuilding_mines_5 = {
	AssessBuilding_mines = {
		name = mines_5
		root = $root$
		weight = $weight$
		productNew = 3
		productCur = 2.4
		gravVal = 0.1
		gravMult = 0
	}
}

AssessBuilding_urban_infrastructure = {
	# Get effect of urban gravity increase
	set_variable = { which = tempChangeGravVal value = $gravVal$ }
	set_variable = { which = tempChangeGravMult value = $gravMult$ }
	
	GetPropIncrease = {
		changeVal = tempChangeGravVal
		changeMult = tempChangeGravMult
		changeClean = yes
		prevVal = urban_gravity_base
		prevMult = urban_gravity_percentage
		prevClean = no
		div = 2
		return = tempIncreaseGrav
	}
	
	GetIncomeUrban$root$ = { return = tempIncomeUrban }
	
	multiply_variable = { which = tempIncreaseGrav which = getBestBuildingFood }
	multiply_variable = { which = tempIncreaseGrav which = tempIncomeUrban }
	
	# Set weight
	set_variable = { which = $weight$ which = tempIncreaseGrav }
	[[misc]
	change_variable = { which = $weight$ which = $misc$ }
	]
	
	# Modify weight
	# Get price and do stuffs with it
	DoPriceModify = { name = $name$ weight = $weight$ }
	
	set_variable = { which = tempIncomeUrban value = 0 }
	set_variable = { which = tempIncreaseGrav value = 0 }
}

AssessBuilding_town_hall = {
	AssessBuilding_urban_infrastructure = {
		name = town_hall
		root = $root$
		gravVal = 2.5
		gravMult = 1
		weight = $weight$
	}
}

AssessBuilding_urban_infrastructure_1 = {	
	AssessBuilding_urban_infrastructure = {
		name = urban_infrastructure_1
		root = $root$
		gravVal = 2
		gravMult = 0.5
		weight = $weight$
	}
}

AssessBuilding_urban_infrastructure_2 = {	
	AssessBuilding_urban_infrastructure = {
		name = urban_infrastructure_2
		root = $root$
		gravVal = 1.5
		gravMult = 0.25
		weight = $weight$
	}
}

AssessBuilding_urban_infrastructure_3 = {
	AssessBuilding_urban_infrastructure = {
		name = urban_infrastructure_3
		root = $root$
		gravVal = 1
		gravMult = 0.05
		weight = $weight$
	}
}

AssessBuilding_urban_infrastructure_4 = {
	AssessBuilding_urban_infrastructure = {
		name = urban_infrastructure_4
		root = $root$
		gravVal = 0.75
		gravMult = 0.05
		weight = $weight$
	}
}

AssessBuilding_urban_infrastructure_5 = {
	AssessBuilding_urban_infrastructure = {
		name = urban_infrastructure_5
		root = $root$
		gravVal = 0.5
		gravMult = 0.05
		weight = $weight$
	}
}

AssessBuilding_harbour_infrastructure = {
	# Effect of trade power increase on income
	set_variable = { which = tempChangeTradeVal value = $tradeVal$ }
	set_variable = { which = tempChangeTradeMult value = $tradeMult$ }

	export_to_variable = { which = tempPrevTradeVal value = modifier:province_trade_power_value }
	export_to_variable = { which = tempPrevTradeMult value = modifier:province_trade_power_modifier }
	change_variable = { which = tempPrevTradeMult value = 1 }

	GetPropIncrease = {
		changeVal = tempChangeTradeVal
		changeMult = tempChangeTradeMult
		changeClean = yes
		prevVal = tempPrevTradeVal
		prevMult = tempPrevTradeMult
		prevClean = yes
		div = 1.5
		return = tempIncreaseTrade
	}
	
	GetIncomeTrade$root$ = { return = tempIncomeTrade }
	
	multiply_variable = { which = tempIncreaseTrade which = tempIncomeTrade }
	
	# Get effect of urban gravity increase
	set_variable = { which = tempChangeGravVal value = $gravVal$ }
	set_variable = { which = tempChangeGravMult value = $gravMult$ }
	
	GetPropIncrease = {
		changeVal = tempChangeGravVal
		changeMult = tempChangeGravMult
		changeClean = yes
		prevVal = urban_gravity_base
		prevMult = urban_gravity_percentage
		prevClean = no
		div = 2
		return = tempIncreaseGrav
	}
	
	GetIncomeUrban$root$ = { return = tempIncomeUrban }
	
	multiply_variable = { which = tempIncreaseGrav which = getBestBuildingFood }
	multiply_variable = { which = tempIncreaseGrav which = tempIncomeUrban }
	
	# Set weight
	set_variable = { which = $weight$ which = tempIncreaseTrade }
	change_variable = { which = $weight$ which = tempIncreaseGrav }
	[[misc]
	change_variable = { which = $weight$ which = $misc$ }
	]
	
	# Modify weight
	# Get price and do stuffs with it
	DoPriceModify = { name = $name$ weight = $weight$ }
	
	set_variable = { which = tempIncreaseTrade value = 0 }
	set_variable = { which = tempIncomeTrade value = 0 }
	set_variable = { which = tempIncomeUrban value = 0 }
	set_variable = { which = tempIncreaseGrav value = 0 }
}

AssessBuilding_harbour_infrastructure_1 = {
	AssessBuilding_harbour_infrastructure = {
		name = harbour_infrastructure_1
		root = $root$
		tradeVal = 0
		tradeMult = 0.05
		gravVal = 0.15
		gravMult = 0.05
		weight = $weight$
	}
}

AssessBuilding_harbour_infrastructure_2 = {
	AssessBuilding_harbour_infrastructure = {
		name = harbour_infrastructure_2
		root = $root$
		tradeVal = 0
		tradeMult = 0.15
		gravVal = 0.1
		gravMult = 0.2
		weight = $weight$
	}
}

AssessBuilding_harbour_infrastructure_3x = {
	AssessBuilding_harbour_infrastructure = {
		name = harbour_infrastructure_3x
		root = $root$
		tradeVal = 0
		tradeMult = 0.1
		gravVal = 0.05
		gravMult = 0.05
		weight = $weight$
	}
}

AssessBuilding_harbour_infrastructure_4 = {
	AssessBuilding_harbour_infrastructure = {
		name = harbour_infrastructure_4
		root = $root$
		tradeVal = 0
		tradeMult = 0.1
		gravVal = 0.05
		gravMult = 0.05
		weight = $weight$
	}
}

AssessBuilding_harbour_infrastructure_5 = {
	AssessBuilding_harbour_infrastructure = {
		name = harbour_infrastructure_5
		root = $root$
		tradeVal = 0
		tradeMult = 0.1
		gravVal = 0.2
		gravMult = 0.1
		weight = $weight$
	}
}

AssessBuilding_trade = {
	# Effect of trade power increase on income
	POP_trade_power_$nameCur$ = { returnVal = tempPrevTradePowerValue returnMult = tempPrevTradePowerMult }
	POP_trade_power_$nameNew$ = { returnVal = tempNewTradePowerValue returnMult = tempNewTradePowerMult }
	
	set_variable = { which = tempChangeTradeVal which = tempNewTradePowerValue }
	set_variable = { which = tempChangeTradeMult which = tempNewTradePowerMult }
	
	subtract_variable = { which = tempChangeTradeVal which = tempPrevTradePowerValue }
	subtract_variable = { which = tempChangeTradeMult which = tempPrevTradePowerMult }

	export_to_variable = { which = tempPrevTradeVal value = modifier:province_trade_power_value }
	export_to_variable = { which = tempPrevTradeMult value = modifier:province_trade_power_modifier }
	change_variable = { which = tempPrevTradeMult value = 1 }

	GetPropIncrease = {
		changeVal = tempChangeTradeVal
		changeMult = tempChangeTradeMult
		changeClean = yes
		prevVal = tempPrevTradeVal
		prevMult = tempPrevTradeMult
		prevClean = yes
		div = 1.5
		return = tempIncreaseTrade
	}
	
	GetIncomeTrade$root$ = { return = tempIncomeTrade }
	
	multiply_variable = { which = tempIncreaseTrade which = tempIncomeTrade }
	
	# Get effect of urban gravity increase
	set_variable = { which = tempChangeGravVal value = $gravVal$ }
	set_variable = { which = tempChangeGravMult value = $gravMult$ }
	
	GetPropIncrease = {
		changeVal = tempChangeGravVal
		changeMult = tempChangeGravMult
		changeClean = yes
		prevVal = urban_gravity_base
		prevMult = urban_gravity_percentage
		prevClean = no
		div = 2
		return = tempIncreaseGrav
	}
	
	GetIncomeUrban$root$ = { return = tempIncomeUrban }
	
	multiply_variable = { which = tempIncreaseGrav which = getBestBuildingFood }
	multiply_variable = { which = tempIncreaseGrav which = tempIncomeUrban }
	
	# Set weight
	set_variable = { which = $weight$ which = tempIncreaseTrade }
	change_variable = { which = $weight$ which = tempIncreaseGrav }
	
	# Modify weight
	# Get price and do stuffs with it
	DoPriceModify = { name = $nameNew$ weight = $weight$ }
	
	set_variable = { which = tempPrevTradePowerValue value = 0 }
	set_variable = { which = tempPrevTradePowerMult value = 0 }
	set_variable = { which = tempNewTradePowerValue value = 0 }
	set_variable = { which = tempNewTradePowerMult value = 0 }
	set_variable = { which = tempIncomeTrade value = 0 }
	set_variable = { which = tempIncomeUrban value = 0 }
	set_variable = { which = tempIncreaseTrade value = 0 }
	set_variable = { which = tempIncreaseGrav value = 0 }
}

AssessBuilding_marketplace = {
	AssessBuilding_trade = {
		nameCur = none
		nameNew = marketplace
		root = $root$
		gravVal = 1.5
		gravMult = 1
		weight = $weight$
	}
}

AssessBuilding_merchant_guild = {
	AssessBuilding_trade = {
		nameCur = marketplace
		nameNew = merchant_guild
		root = $root$
		gravVal = 1
		gravMult = 0.75
		weight = $weight$
	}
	
}

AssessBuilding_trade_depot = {
	AssessBuilding_trade = {
		nameCur = merchant_guild
		nameNew = trade_depot
		root = $root$
		gravVal = 0.75
		gravMult = 0.5
		weight = $weight$
	}
}

AssessBuilding_customs_house = {
	AssessBuilding_trade = {
		nameCur = trade_depot
		nameNew = customs_house
		root = $root$
		gravVal = 0.5
		gravMult = 0.25
		weight = $weight$
	}
}

AssessBuilding_trading_post = {
	AssessBuilding_trade = {
		nameCur = none
		nameNew = trading_post
		root = $root$
		gravVal = 1.5
		gravMult = 0.75
		weight = $weight$
	}
}

AssessBuilding_trading_company = {
	AssessBuilding_trade = {
		nameCur = trading_post
		nameNew = trading_company
		root = $root$
		gravVal = 1.25
		gravMult = 0.5
		weight = $weight$
	}
}

AssessBuilding_finance = {
	# Effect of trade power increase on income
	set_variable = { which = tempChangeTradeVal value = $tradeVal$ }
	set_variable = { which = tempChangeTradeMult value = $tradeMult$ }

	export_to_variable = { which = tempPrevTradeVal value = modifier:province_trade_power_value }
	export_to_variable = { which = tempPrevTradeMult value = modifier:province_trade_power_modifier }
	change_variable = { which = tempPrevTradeMult value = 1 }

	GetPropIncrease = {
		changeVal = tempChangeTradeVal
		changeMult = tempChangeTradeMult
		changeClean = yes
		prevVal = tempPrevTradeVal
		prevMult = tempPrevTradeMult
		prevClean = yes
		div = 1.5
		return = tempIncreaseTrade
	}
	
	GetIncomeTrade$root$ = { return = tempIncomeTrade }
	
	multiply_variable = { which = tempIncreaseTrade which = tempIncomeTrade }
	
	# Get effect of urban gravity increase
	set_variable = { which = tempChangeGravVal value = $gravVal$ }
	set_variable = { which = tempChangeGravMult value = $gravMult$ }
	
	GetPropIncrease = {
		changeVal = tempChangeGravVal
		changeMult = tempChangeGravMult
		changeClean = yes
		prevVal = urban_gravity_base
		prevMult = urban_gravity_percentage
		prevClean = no
		div = 2
		return = tempIncreaseGrav
	}
	
	GetIncomeUrban$root$ = { return = tempIncomeUrban }
	
	multiply_variable = { which = tempIncreaseGrav which = getBestBuildingFood }
	multiply_variable = { which = tempIncreaseGrav which = tempIncomeUrban }
	
	# Set weight
	set_variable = { which = $weight$ which = tempIncreaseTrade }
	change_variable = { which = $weight$ which = tempIncreaseGrav }
	
	# Modify weight
	# Get price and do stuffs with it
	DoPriceModify = { name = $name$ weight = $weight$ }
	
	set_variable = { which = tempIncomeTrade value = 0 }
	set_variable = { which = tempIncomeUrban value = 0 }
	set_variable = { which = tempIncreaseTrade value = 0 }
	set_variable = { which = tempIncreaseGrav value = 0 }
}

AssessBuilding_bank = {
	AssessBuilding_finance = {
		name = bank
		root = $root$
		tradeVal = 0.1
		tradeMult = 0.25
		gravVal = 0.75
		gravMult = 0.25
		weight = $weight$
	}
}

AssessBuilding_stock_exchange = {
	AssessBuilding_finance = {
		name = stock_exchange
		root = $root$
		tradeVal = 0.05
		tradeMult = 0.1
		gravVal = 1
		gravMult = 0.25
		weight = $weight$
	}
}

AssessBuilding_production = {
	# Effect of production increase
	POP_production_power_$nameCur$ = { returnVal = tempPrevProdValue }
	POP_production_power_$nameNew$ = { returnVal = tempNewProdValue }
	
	set_variable = { which = tempChangeProdValue which = tempNewProdValue }
	subtract_variable = { which = tempChangeProdValue which = tempPrevProdValue }
	
	set_variable = { which = tempPrevProdMult which = urban_production_power }
	if = {
		limit = { NOT = { check_variable = { which = tempPrevProdValue value = 0.001 } } }
		set_variable = { which = tempPrevProdValue value = 0.001 }
	}
	divide_variable = { which = tempPrevProdMult which = tempPrevProdValue }
	
	set_variable = { which = nothing value = 0 }
	
	GetPropIncrease = {
		changeVal = tempChangeProdValue
		changeMult = nothing
		changeClean = yes
		prevVal = urban_production_power
		prevMult = tempPrevProdMult
		prevClean = no
		div = 1
		return = tempIncreaseProd
	}
	
	GetIncomeProd$root$ = { return = tempIncomeProd }
	
	multiply_variable = { which = tempIncreaseProd which = tempIncomeProd }
	
	# Get effect of urban gravity increase
	set_variable = { which = tempChangeGravVal value = $gravVal$ }
	set_variable = { which = tempChangeGravMult value = $gravMult$ }
	
	GetPropIncrease = {
		changeVal = tempChangeGravVal
		changeMult = tempChangeGravMult
		changeClean = yes
		prevVal = urban_gravity_base
		prevMult = urban_gravity_percentage
		prevClean = no
		div = 2
		return = tempIncreaseGrav
	}
	
	GetIncomeUrban$root$ = { return = tempIncomeUrban }
	
	multiply_variable = { which = tempIncreaseGrav which = getBestBuildingFood }
	multiply_variable = { which = tempIncreaseGrav which = tempIncomeUrban }
	
	# Set weight
	set_variable = { which = $weight$ which = tempIncreaseProd }
	change_variable = { which = $weight$ which = tempIncreaseGrav }
	
	# Modify weight
	# Get price and do stuffs with it
	DoPriceModify = { name = $nameNew$ weight = $weight$ }
	
	set_variable = { which = tempPrevProdValue value = 0 }
	set_variable = { which = tempNewProdValue value = 0 }
	set_variable = { which = tempIncomeProd value = 0 }
	set_variable = { which = tempPrevProdMult value = 0 }
	set_variable = { which = tempIncreaseProd value = 0 }
	set_variable = { which = tempIncomeUrban value = 0 }
	set_variable = { which = tempIncreaseGrav value = 0 }
}

AssessBuilding_workshop = {
	AssessBuilding_production = {
		nameCur = none
		nameNew = workshop
		root = $root$
		gravVal = 1.75
		gravMult = 1.25
		weight = $weight$
	}
}

AssessBuilding_corporation_guild = {
	AssessBuilding_production = {
		nameCur = workshop
		nameNew = corporation_guild
		root = $root$
		gravVal = 1.5
		gravMult = 1
		weight = $weight$
	}
}

AssessBuilding_urban_manufactory = {
	AssessBuilding_production = {
		nameCur = corporation_guild
		nameNew = urban_manufactory
		root = $root$
		gravVal = 1.25
		gravMult = 0.75
		weight = $weight$
	}
}

AssessBuilding_factory = {
	AssessBuilding_production = {
		nameCur = urban_manufactory
		nameNew = factory
		root = $root$
		gravVal = 1
		gravMult = 0.5
		weight = $weight$
	}
}

AssessBuilding_steam_powered_factory = {
	AssessBuilding_production = {
		nameCur = factory
		nameNew = steam_powered_factory
		root = $root$
		gravVal = 1
		gravMult = 0.5
		weight = $weight$
	}
}

AssessBuilding_warehousetree = {
	# Effect of production increase
	set_variable = { which = tempChangeProdMult value = $prodMult$ }
	
	set_variable = { which = nothing value = 0 }
	
	POP_production_power_none = { returnVal = tempPrevProdVal }
	
	# Get initial urban production power
	trigger_switch = {
		on_trigger = has_building
		### Urban Production Power is generated when urban production buildings are "filled" with workers. Better buildings generally have more worker spots available.
		workshop = { POP_production_power_workshop = { returnVal = tempPrevProdVal } }
		corporation_guild = { POP_production_power_corporation_guild = { returnVal = tempPrevProdVal } }
		urban_manufactory = { POP_production_power_urban_manufactory = { returnVal = tempPrevProdVal } }
		factory = { POP_production_power_factory = { returnVal = tempPrevProdVal } }
		steam_powered_factory = { POP_production_power_steam_powered_factory = { returnVal = tempPrevProdVal } }
	}
	
	set_variable = { which = tempPrevProdMult which = urban_production_power }
	if = {
		limit = { NOT = { check_variable = { which = tempPrevProdVal value = 0.001 } } }
		set_variable = { which = tempPrevProdVal value = 0.001 }
	}
	divide_variable = { which = tempPrevProdMult which = tempPrevProdVal }

	GetPropIncrease = {
		changeVal = nothing
		changeMult = tempChangeProdMult
		changeClean = yes
		prevVal = urban_production_power
		prevMult = tempPrevProdMult
		prevClean = no
		div = 1
		return = tempIncreaseProd
	}
	
	GetIncomeProd$root$ = { return = tempIncomeProd }
	
	multiply_variable = { which = tempIncreaseProd which = tempIncomeProd }
	
	# Effect of trade power increase on income
	set_variable = { which = tempChangeTradeVal value = $tradeVal$ }
	set_variable = { which = tempChangeTradeMult value = $tradeMult$ }

	export_to_variable = { which = tempPrevTradeVal value = modifier:province_trade_power_value }
	export_to_variable = { which = tempPrevTradeMult value = modifier:province_trade_power_modifier }
	change_variable = { which = tempPrevTradeMult value = 1 }

	GetPropIncrease = {
		changeVal = tempChangeTradeVal
		changeMult = tempChangeTradeMult
		changeClean = yes
		prevVal = tempPrevTradeVal
		prevMult = tempPrevTradeMult
		prevClean = yes
		div = 1.5
		return = tempIncreaseTrade
	}
	
	GetIncomeTrade$root$ = { return = tempIncomeTrade }
	
	multiply_variable = { which = tempIncreaseTrade which = tempIncomeTrade }
	
	# Get effect of urban gravity increase
	set_variable = { which = tempChangeGravVal value = $gravVal$ }
	set_variable = { which = tempChangeGravMult value = $gravMult$ }
	
	GetPropIncrease = {
		changeVal = tempChangeGravVal
		changeMult = tempChangeGravMult
		changeClean = yes
		prevVal = urban_gravity_base
		prevMult = urban_gravity_percentage
		prevClean = no
		div = 2
		return = tempIncreaseGrav
	}
	
	GetIncomeUrban$root$ = { return = tempIncomeUrban }
	
	multiply_variable = { which = tempIncreaseGrav which = getBestBuildingFood }
	multiply_variable = { which = tempIncreaseGrav which = tempIncomeUrban }
	
	# Set weight
	set_variable = { which = $weight$ which = tempIncreaseProd }
	change_variable = { which = $weight$ which = tempIncreaseTrade }
	change_variable = { which = $weight$ which = tempIncreaseGrav }
	[[misc]
	change_variable = { which = $weight$ which = $misc$ }
	]
	
	trigger_switch = {
		on_trigger = has_building
		workshop = { multiply_variable = { which = $weight$ value = 1.1 } }
		corporation_guild = { multiply_variable = { which = $weight$ value = 1.25 } }
		urban_manufactory = { multiply_variable = { which = $weight$ value = 1.5 } }
		factory = { multiply_variable = { which = $weight$ value = 2 } }
		steam_powered_factory = { multiply_variable = { which = $weight$ value = 2 } }
	}
	
	# Modify weight
	# Get price and do stuffs with it
	DoPriceModify = { name = $name$ weight = $weight$ }
	
	set_variable = { which = tempPrevProdVal value = 0 }
	set_variable = { which = tempPrevProdMult value = 0 }
	set_variable = { which = tempIncreaseProd value = 0 }
	set_variable = { which = tempIncomeProd value = 0 }
	set_variable = { which = tempIncreaseTrade value = 0 }
	set_variable = { which = tempIncomeTrade value = 0 }
	set_variable = { which = tempIncreaseGrav value = 0 }
	set_variable = { which = tempIncomeUrban value = 0 }
}

AssessBuilding_warehouse = {
	AssessBuilding_warehousetree = {
		name = warehouse
		root = $root$
		prodMult = 0.15
		tradeVal = 0.1
		tradeMult = 0.1
		gravVal = 0.15
		gravMult = 0.1
		weight = $weight$
	}
}

AssessBuilding_warehouse_district = {
	AssessBuilding_warehousetree = {
		name = warehouse_district
		root = $root$
		prodMult = 0.15
		tradeVal = 0
		tradeMult = 0.075
		gravVal = 0.1
		gravMult = 0.1
		weight = $weight$
	}
}

AssessBuilding_small_university = {
	AssessBuilding_urban_infrastructure = {
		name = small_university
		root = $root$
		gravVal = 0.5
		gravMult = 0
		weight = $weight$
	}
	
	set_variable = { which = tmpUpper which = devPointUpperCur }
	multiply_variable = { which = tmpUpper value = 0.05 }
	
	change_variable = { which = $weight$ which = tmpUpper }
	
	set_variable = { which = tmpUpper value = 0 }
}

AssessBuilding_medium_university = {
	AssessBuilding_urban_infrastructure = {
		name = medium_university
		root = $root$
		gravVal = 1
		gravMult = 0.1
		weight = $weight$
	}
	
	set_variable = { which = tmpUpper which = devPointUpperCur }
	multiply_variable = { which = tmpUpper value = 0.05 }
	
	change_variable = { which = $weight$ which = tmpUpper }
	
	set_variable = { which = tmpUpper value = 0 }
}

AssessBuilding_big_university = {
	AssessBuilding_urban_infrastructure = {
		name = big_university
		root = $root$
		gravVal = 1
		gravMult = 0.15
		weight = $weight$
	}
	
	set_variable = {
		which = tmpUpper
		which = devPointUpperCur
	}
	multiply_variable = { which = tmpUpper value = 0.05 }
	
	change_variable = { which = $weight$ which = tmpUpper }
	
	set_variable = { which = tmpUpper value = 0 }
}

AssessBuilding_art_corporation = {
	AssessBuilding_urban_infrastructure = {
		name = art_corporation
		root = $root$
		gravVal = 0.3
		gravMult = 0.1
		weight = $weight$
	}
	
	set_variable = { which = tmpUpper which = devPointUpperCur }
	multiply_variable = { which = tmpUpper value = 0.05 }
	
	change_variable = { which = $weight$ which = tmpUpper }
	
	set_variable = { which = tmpUpper value = 0 }
}

AssessBuilding_fine_arts_academy = {
	AssessBuilding_urban_infrastructure = {
		name = fine_arts_academy
		root = $root$
		gravVal = 0.2
		gravMult = 0.05
		weight = $weight$
	}
	
	set_variable = { which = tmpUpper which = devPointUpperCur }
	multiply_variable = { which = tmpUpper value = 0.05 }
	
	change_variable = { which = $weight$ which = tmpUpper }
	
	set_variable = { which = tmpUpper value = 0 }
}

AssessBuilding_opera = {
	AssessBuilding_urban_infrastructure = {
		name = opera
		root = $root$
		gravVal = 0.2
		gravMult = 0.05
		weight = $weight$
	}
	
	set_variable = { which = tmpUpper which = devPointUpperCur }
	multiply_variable = { which = tmpUpper value = 0.05 }
	
	change_variable = { which = $weight$ which = tmpUpper }
	
	set_variable = { which = tmpUpper value = 0 }
}

AssessBuilding_temple = {
	AssessBuilding_urban_infrastructure = {		#added the ability to build temples for the AI
		name = temple							#slightly higher weighting than for art buildings for now
		root = $root$							#since they're cheap and give other bonuses
		gravVal = 0.3
		gravMult = 0.1
		weight = $weight$
	}
	
	set_variable = { which = tmpUpper which = devPointUpperCur }
	multiply_variable = { which = tmpUpper value = 0.05 }
	
	change_variable = { which = $weight$ which = tmpUpper }
	
	set_variable = { which = tmpUpper value = 0 }
}

AssessBuilding_rural_infrastructure = { 
	compare_profit = yes
	
	divide_variable = { which = exam_far value = $prev$ }
	multiply_variable = { which = exam_far value = $change$ }

	GetIncomeRuralProd$root$ = { return = $weight$ }
		
	divide_variable = { which = $weight$ value = $prev$ }
	multiply_variable = { which = $weight$ value = $change$ }
		
	multiply_variable = { which = $weight$ which = exam_far }
	divide_variable = { which = $weight$ which = exam_close }
		
	DoPriceModify = { name = $name$ weight = $weight$ }
	
	set_variable = { which = exam_far value = 0 }
	set_variable = { which = exam_close value = 0 }
}

AssessBuilding_rural_infrastructure_1 = {
	AssessBuilding_rural_infrastructure = {
		name = rural_infrastructure_1
		root = $root$
		prev = 1
		change = 0.55
		weight = $weight$
	}
}

AssessBuilding_rural_infrastructure_2 = {
	AssessBuilding_rural_infrastructure = {
		name = rural_infrastructure_2
		root = $root$
		prev = 1.5 		#1.55
		change = 0.44 	#0.283
		weight = $weight$
	}
}

AssessBuilding_rural_infrastructure_3 = {
	AssessBuilding_rural_infrastructure = {
		name = rural_infrastructure_3
		root = $root$
		prev = 1.833
		change = 0.352 	#0.267
		weight = $weight$
	}
}

AssessBuilding_rural_infrastructure_4 = {
	AssessBuilding_rural_infrastructure = {
		name = rural_infrastructure_4
		root = $root$
		prev = 2.1
		change = 0.281 	#0.15
		weight = $weight$
	}
}

AssessBuilding_rural_infrastructure_5 = {
	AssessBuilding_rural_infrastructure = {
		name = rural_infrastructure_5
		root = $root$
		prev = 2.25
		change = 0.225 	#0.133
		weight = $weight$
	}
}

AssessBuilding_rural_infrastructure_6 = {
	AssessBuilding_rural_infrastructure = {
		name = rural_infrastructure_6
		root = $root$
		prev = 2.383
		change = 0.18 	#0.083
		weight = $weight$
	}
}

AssessBuilding_rural_infrastructure_7 = {
	AssessBuilding_rural_infrastructure = {
		name = rural_infrastructure_7
		root = $root$
		prev = 2.45
		change = 0.144 	#0.067
		weight = $weight$
	}
}

AssessBuilding_farm_effic = {
	set_variable = { which = $weight$ value = 0.2 }
	
	# Just using unused argument
	set_variable = { which = $root$ which = $root$ }
}

AssessBuilding_fort_14th = {
	if = {
		limit = {
			NOT = {
				has_building = fort_14th
				has_building = fort_15th
				has_building = fort_16th
				has_building = fort_17th
				has_building = fort_18th
			}
			any_neighbor_province = {
				owned_by = PREV
				OR = {
					has_building = fort_14th
					has_building = fort_15th
					has_building = fort_16th
					has_building = fort_17th
					has_building = fort_18th
				}
			}
		}
		set_variable = { which = $weight$ value = -10 }
	}
	else = {
		AssessBuilding_urban_infrastructure = {
			name = fort_14th
			root = $root$
			gravVal = 0.1
			gravMult = 0.1
			misc = aiWeightFort
			weight = $weight$
		}
	}
}

AssessBuilding_fort_15th = {
	if = {
		limit = {
			NOT = {
				has_building = fort_14th
				has_building = fort_15th
				has_building = fort_16th
				has_building = fort_17th
				has_building = fort_18th
			}
			any_neighbor_province = {
				owned_by = PREV
				OR = {
					has_building = fort_14th
					has_building = fort_15th
					has_building = fort_16th
					has_building = fort_17th
					has_building = fort_18th
				}
			}
		}
		set_variable = { which = $weight$ value = -1 }
	}
	else = {
		AssessBuilding_urban_infrastructure = {
			name = fort_15th
			root = $root$
			gravVal = 0.1
			gravMult = 0.05
			misc = aiWeightFort
			weight = $weight$
		}
	}
}

AssessBuilding_fort_16th = {
	if = {
		limit = {
			NOT = {
				has_building = fort_14th
				has_building = fort_15th
				has_building = fort_16th
				has_building = fort_17th
				has_building = fort_18th
			}
			any_neighbor_province = {
				owned_by = PREV
				OR = {
					has_building = fort_14th
					has_building = fort_15th
					has_building = fort_16th
					has_building = fort_17th
					has_building = fort_18th
				}
			}
		}
		set_variable = { which = $weight$ value = -1 }
	}
	else = {
		AssessBuilding_urban_infrastructure = {
			name = fort_16th
			root = $root$
			gravVal = 0.1
			gravMult = 0.05
			misc = aiWeightFort
			weight = $weight$
		}
	}
}

AssessBuilding_fort_17th = {
	if = {
		limit = {
			NOT = {
				has_building = fort_14th
				has_building = fort_15th
				has_building = fort_16th
				has_building = fort_17th
				has_building = fort_18th
			}
			any_neighbor_province = {
				owned_by = PREV
				OR = {
					has_building = fort_14th
					has_building = fort_15th
					has_building = fort_16th
					has_building = fort_17th
					has_building = fort_18th
				}
			}
		}
		set_variable = { which = $weight$ value = -1 }
	}
	else = {
		AssessBuilding_urban_infrastructure = {
			name = fort_17th
			root = $root$
			gravVal = 0.1
			gravMult = 0.05
			misc = aiWeightFort
			weight = $weight$
		}
	}
}

AssessBuilding_fort_18th = {
	if = {
		limit = {
			NOT = {
				has_building = fort_14th
				has_building = fort_15th
				has_building = fort_16th
				has_building = fort_17th
				has_building = fort_18th
			}
			any_neighbor_province = {
				owned_by = PREV
				OR = {
					has_building = fort_14th
					has_building = fort_15th
					has_building = fort_16th
					has_building = fort_17th
					has_building = fort_18th
				}
			}
		}
		set_variable = { which = $weight$ value = -1 }
	}
	else = {
		AssessBuilding_urban_infrastructure = {
			name = fort_18th
			root = $root$
			gravVal = 0.1
			gravMult = 0.05
			misc = aiWeightFort
			weight = $weight$
		}
	}
}

AssessBuilding_road_network = {
	AssessBuilding_warehousetree = {
		name = road_network
		root = $root$
		prodMult = 0.025	#0.05
		tradeVal = 0.1		#0.25
		tradeMult = 0.05	#0.1
		gravVal = 0
		gravMult = 0.05		#0.2
		misc = aiWeightRoad
		weight = $weight$
	}
}

AssessBuilding_paved_road_network = {
	AssessBuilding_warehousetree = {
		name = paved_road_network
		root = $root$
		prodMult = 0.025	#0.05
		tradeVal = 0.15		#0.25
		tradeMult = 0.075	#0.1
		gravVal = 0.1		#0.15
		gravMult = 0.075	#0.1
		misc = aiWeightRoad
		weight = $weight$
	}
}

AssessBuilding_highway_network = {
	AssessBuilding_warehousetree = {
		name = highway_network
		root = $root$
		prodMult = 0.025	#0.05
		tradeVal = 0.2		#0.25
		tradeMult = 0.1		#0.15
		gravVal = 0.1
		gravMult = 0.1
		misc = aiWeightRoad
		weight = $weight$
	}
}

AssessBuilding_road_and_rail_network = {
	AssessBuilding_warehousetree = {
		name = road_and_rail_network
		root = $root$
		prodMult = 0.25
		tradeVal = 0.25
		tradeMult = 0.15
		gravVal = 0.15
		gravMult = 0.1
		misc = aiWeightRoad
		weight = $weight$
	}
}

AssessBuilding_bureaucracy_1 = {
	AssessBuilding_harbour_infrastructure = {
		name = bureaucracy_1
		root = $root$
		tradeVal = 0
		tradeMult = -0.1
		gravVal = 0.5
		gravMult = 0.25
		misc = aiWeightBureau
		weight = $weight$
	}
}

AssessBuilding_bureaucracy_2 = {
	AssessBuilding_harbour_infrastructure = {
		name = bureaucracy_2
		root = $root$
		tradeVal = 0
		tradeMult = -0.1
		gravVal = 0.5
		gravMult = 0.1
		misc = aiWeightBureau
		weight = $weight$
	}
}

AssessBuilding_bureaucracy_3 = {
	AssessBuilding_harbour_infrastructure = {
		name = bureaucracy_3
		root = $root$
		tradeVal = 0
		tradeMult = -0.05
		gravVal = 1
		gravMult = 0.15
		misc = aiWeightBureau
		weight = $weight$
	}
}

AssessBuilding_bureaucracy_4 = {
	AssessBuilding_harbour_infrastructure = {
		name = bureaucracy_4
		root = $root$
		tradeVal = 0
		tradeMult = -0.05
		gravVal = 1
		gravMult = 0.25
		misc = aiWeightBureau
		weight = $weight$
	}
}

AssessBuilding_bureaucracy_5 = {
	AssessBuilding_harbour_infrastructure = {
		name = bureaucracy_5
		root = $root$
		tradeVal = 0
		tradeMult = -0.05
		gravVal = 1
		gravMult = 0.25
		misc = aiWeightBureau
		weight = $weight$
	}
}

AssessBuilding_harbour_infrastructure_1_state = {
	if = {
		limit = {
			NOT = { has_province_flag = has_great_natural_harbour }
			any_neighbor_province = {
				owned_by = PREV
				OR = {
					has_building = harbour_infrastructure_2
					has_province_flag = large_port_present
				}
			}
		}
		set_variable = { which = $weight$ value = -1 }
	}
	
	AssessBuilding_harbour_infrastructure = {
		name = harbour_infrastructure_1
		root = $root$
		tradeVal = 0
		tradeMult = 0.05
		gravVal = 0.15
		gravMult = 0.05
		misc = aiWeightPort
		weight = $weight$
	}
}

AssessBuilding_harbour_infrastructure_2_state = {
	if = {
		limit = {
			NOT = { has_province_flag = has_great_natural_harbour }
			any_neighbor_province = {
				owned_by = PREV
				OR = {
					has_building = harbour_infrastructure_2
					has_province_flag = large_port_present
				}
			}
		}
		set_variable = {
			which = aiWeightPort
			value = 0
		}
	}
	
	AssessBuilding_harbour_infrastructure = {
		name = harbour_infrastructure_2
		root = $root$
		tradeVal = 0
		tradeMult = 0.15
		gravVal = 0.1
		gravMult = 0.2
		misc = aiWeightPort
		weight = $weight$
	}
}

AssessBuilding_harbour_infrastructure_3x_state = {
	AssessBuilding_harbour_infrastructure = {
		name = harbour_infrastructure_3x
		root = $root$
		tradeVal = 0
		tradeMult = 0.1
		gravVal = 0.05
		gravMult = 0.05
		misc = aiWeightPort
		weight = $weight$
	}
}

AssessBuilding_harbour_infrastructure_4_state = {
	AssessBuilding_harbour_infrastructure = {
		name = harbour_infrastructure_4
		root = $root$
		tradeVal = 0
		tradeMult = 0.1
		gravVal = 0.05
		gravMult = 0.05
		misc = aiWeightPort
		weight = $weight$
	}
}

AssessBuilding_harbour_infrastructure_5_state = {
	AssessBuilding_harbour_infrastructure = {
		name = harbour_infrastructure_5
		root = $root$
		tradeVal = 0
		tradeMult = 0.1
		gravVal = 0.2
		gravMult = 0.1
		misc = aiWeightPort
		weight = $weight$
	}
}

AssessBuilding_military_harbour_1 = {
	AssessBuilding_harbour_infrastructure = {
		name = military_harbour_1
		root = $root$
		tradeVal = 0.05	  #0
		tradeMult = 0.03  #0.025
		gravVal = 0.3	  #0.25
		gravMult = 0.05	  #0
		misc = aiWeightShipyard
		weight = $weight$
	}
}

AssessBuilding_military_harbour_2 = {
	AssessBuilding_harbour_infrastructure = {
		name = military_harbour_2
		root = $root$
		tradeVal = 0
		tradeMult = 0.025
		gravVal = 0.25
		gravMult = 0
		misc = aiWeightShipyard
		weight = $weight$
	}
}

AssessBuilding_military_harbour_3 = {
	AssessBuilding_harbour_infrastructure = {
		name = military_harbour_3
		root = $root$
		tradeVal = 0
		tradeMult = 0.025
		gravVal = 0.5
		gravMult = 0
		misc = aiWeightShipyard
		weight = $weight$
	}
}

AssessBuilding_military_harbour_4 = {
	AssessBuilding_harbour_infrastructure = {
		name = military_harbour_4
		root = $root$
		tradeVal = 0
		tradeMult = 0.025
		gravVal = 0.5
		gravMult = 0
		misc = aiWeightShipyard
		weight = $weight$
	}
}

AssessBuilding_canal = {
	set_variable = { which = tempChangeFarmVal value = $farmVal$ }
	set_variable = { which = nothing0 value = 0 }
	set_variable = { which = nothing1 value = 1 }
	
	GetPropIncrease = {
		changeVal = tempChangeFarmVal
		changeMult = nothing0
		changeClean = yes
		prevVal = farm_efficiency
		prevMult = nothing1
		prevClean = no
		div = 1.25
		return = tempIncreaseFarm
	}
	
	GetIncomeRuralFarm$root$ = { return = tempIncomeFarm }
	multiply_variable = { which = tempIncreaseFarm which = tempIncomeFarm }
	
	set_variable = { which = tempChangeInnateVal value = $innateVal$ }
	set_variable = { which = tempChangeInnateMult value = $innateMult$ }
	
	set_variable = { which = tempPrevInnateVal which = innate_rural_pop_base }
	change_variable = { which = tempPrevInnateVal value = $innateValPrev$ }
	
	export_to_variable = { which = tempADM value = adm_tech who = owner }
	export_to_variable = { which = tempDIP value = dip_tech who = owner }
	
	set_variable = { which = tempPrevInnateMult which = tempADM }
	set_variable = { which = tempADM value = 0 }
	
	change_variable = { which = tempPrevInnateMult which = tempDIP }
	set_variable = { which = tempDIP value = 0 }
	
	divide_variable = { which = tempPrevInnateMult value = 150 }
	change_variable = { which = tempPrevInnateMult value = 1 }
	change_variable = { which = tempPrevInnateMult value = $innateMultPrev$ }
	
	GetPropIncrease = {
		changeVal = tempChangeInnateVal
		changeMult = tempChangeInnateMult
		changeClean = yes
		prevVal = tempPrevInnateVal
		prevMult = tempPrevInnateMult
		prevClean = yes
		div = 1.5
		return = tempIncreaseInnate
	}
	
	GetIncomeRural$root$ = { return = tempIncomeRural }
	multiply_variable = { which = tempIncreaseInnate which = tempIncomeRural }
	
	# Set weight
	set_variable = { which = $weight$ which = tempIncreaseFarm }
	change_variable = { which = $weight$ which = tempIncreaseInnate }
	
	# Modify weight
	divide_variable = { which = $weight$ which = getBestBuildingFood }
	divide_variable = { which = $weight$ which = getBestBuildingFood }
	
	# Get price and do stuffs with it
	DoPriceModify = { name = $name$ weight = $weight$ }
	
	set_variable = { which = nothing1 value = 0 }
	set_variable = { which = tempChangeFarmVal value = 0 }
	set_variable = { which = tempIncomeFarm value = 0 }
	set_variable = { which = tempPrevInnateMult value = 0 }
	set_variable = { which = tempChangeInnateVal value = 0 }
	set_variable = { which = tempChangeInnateMult value = 0 }
	set_variable = { which = tempIncomeRural value = 0 }
	set_variable = { which = tempIncreaseFarm value = 0 }
	set_variable = { which = tempIncreaseInnate value = 0 }
}

AssessBuilding_canal_1 = {
	AssessBuilding_canal = {
		name = canal_1
		root = $root$
		farmVal = 0.05
		innateVal = 3
		innateMult = 0.15
		innateValPrev = 0
		innateMultPrev = 0
		weight = $weight$
	}
}

AssessBuilding_canal_2 = {
	AssessBuilding_canal = {
		name = canal_2
		root = $root$
		farmVal = 0.1
		innateVal = 3
		innateMult = 0.1
		innateValPrev = 3
		innateMultPrev = 0.15
		weight = $weight$
	}
}

AssessBuilding_canal_3 = {
	AssessBuilding_canal = {
		name = canal_3
		root = $root$
		farmVal = 0.1
		innateVal = 2
		innateMult = 0.1
		innateValPrev = 6
		innateMultPrev = 0.25
		weight = $weight$
	}
}