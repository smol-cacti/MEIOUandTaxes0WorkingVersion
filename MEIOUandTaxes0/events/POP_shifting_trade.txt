namespace = POP_shifting_trade

### By KJ and Demian

### This event chain assigns and reassigns trade center modifiers in each sub-continent. ###

country_event = {
	id = POP_shifting_trade.001
	title = "POP_shifting_trade.001.t"
	desc = "POP_shifting_trade.001.d"
	picture = CITY_DEVELOPMENT_AU_eventPicture
	#is_triggered_only = no
	hidden = yes
	
	trigger = {
		has_country_flag = center_of_universe
		
		NOT = { has_country_modifier = trade_modifiers_shifted }
		
		has_global_flag = modifier_initialized
	}
	
	mean_time_to_happen = { months = 1 }
	
	### Converts trade power into a variable for each province. This variable will ultimately be tabulated at the sub-continent food centers and then
	### be used to determine how many trade centers belong on the sub-continent.  This is also true for urban production power
	immediate = {
		add_country_modifier = {
			name = trade_modifiers_shifted
			duration = 1800
		}
		
		regiongroup = {
			region = {
				limit = {
					is_city = yes
				}
				export_to_variable = {
					which = trade_power
					value = province_trade_power
				}
			}
		}
				
		if = {
			limit = {
				check_variable = { which = year_ticker value = 101 }
			}
			set_variable = { which = trade_power which = year_ticker } ### Will scale down trade center proliferation based on year, starting in 1457
			subtract_variable = { which = trade_power value = 100 }
			multiply_variable = { which = trade_power value = 0.5 }
			change_variable = { which = trade_power value = 200 }
			multiply_variable = { which = trade_power value = 0.005 }
			set_variable = { which = urban_production_power which = trade_power }
			set_variable = { which = art_power_ticker which = trade_power }
		}
		else = {
			set_variable = { which = trade_power value = 1 }
			set_variable = { which = urban_production_power value = 1 }
			set_variable = { which = art_power_ticker value = 1 }
		}
		
		srgroup = {
			set_variable = { which = trade_power value = 0 }
			
			sr_effect = { effect=sr_shifting_1 }
			
			divide_variable = { which = trade_power 			which = PREV }
			
			set_variable = { which = dominant_center_of_trade    value = 0 } # Will determine number of dominant trade centers
			set_variable = { which = major_center_of_trade       value = 0 } # ''
			set_variable = { which = important_center_of_trade   value = 0 } # ''
			set_variable = { which = minor_center_of_trade       value = 0 } # ''
			
			### Calculations below are responsible for determining how many--- and of what caliber--- centers of trade each sub-continent gets.  ###
			if = { limit = { check_variable = { which = trade_power value = 25 } } subtract_variable = { which = trade_power value = 25 } change_variable = { which = minor_center_of_trade value = 1 } }
			if = { limit = { check_variable = { which = trade_power value = 50 } } subtract_variable = { which = trade_power value = 50 } change_variable = { which = important_center_of_trade value = 1 } }
			if = { limit = { check_variable = { which = trade_power value = 35 } } subtract_variable = { which = trade_power value = 35 } change_variable = { which = minor_center_of_trade value = 1 } }
			if = { limit = { check_variable = { which = trade_power value = 35 } } subtract_variable = { which = trade_power value = 35 } change_variable = { which = minor_center_of_trade value = 1 } }
			if = { limit = { check_variable = { which = trade_power value = 100 } } subtract_variable = { which = trade_power value = 100 } change_variable = { which = major_center_of_trade value = 1 } }
			if = { limit = { check_variable = { which = trade_power value = 75 } } subtract_variable = { which = trade_power value = 75 } change_variable = { which = important_center_of_trade value = 1 } }
			if = { limit = { check_variable = { which = trade_power value = 45 } } subtract_variable = { which = trade_power value = 45 } change_variable = { which = minor_center_of_trade value = 1 } }
			if = { limit = { check_variable = { which = trade_power value = 45 } } subtract_variable = { which = trade_power value = 45 } change_variable = { which = minor_center_of_trade value = 1 } }
			if = { limit = { check_variable = { which = trade_power value = 90 } } subtract_variable = { which = trade_power value = 90 } change_variable = { which = important_center_of_trade value = 1 } }
			if = { limit = { check_variable = { which = trade_power value = 60 } } subtract_variable = { which = trade_power value = 60 } change_variable = { which = minor_center_of_trade value = 1 } }
			if = { limit = { check_variable = { which = trade_power value = 60 } } subtract_variable = { which = trade_power value = 60 } change_variable = { which = minor_center_of_trade value = 1 } }
			if = { limit = { check_variable = { which = trade_power value = 200 } } subtract_variable = { which = trade_power value = 200 } change_variable = { which = dominant_center_of_trade value = 1 } }
			if = { limit = { check_variable = { which = trade_power value = 150 } } subtract_variable = { which = trade_power value = 150 } change_variable = { which = major_center_of_trade value = 1 } }
			if = { limit = { check_variable = { which = trade_power value = 100 } } subtract_variable = { which = trade_power value = 100 } change_variable = { which = important_center_of_trade value = 1 } }
			if = { limit = { check_variable = { which = trade_power value = 75 } } subtract_variable = { which = trade_power value = 75 } change_variable = { which = minor_center_of_trade value = 1 } }
			if = { limit = { check_variable = { which = trade_power value = 75 } } subtract_variable = { which = trade_power value = 75 } change_variable = { which = minor_center_of_trade value = 1 } }
			if = { limit = { check_variable = { which = trade_power value = 90 } } subtract_variable = { which = trade_power value = 90 } change_variable = { which = minor_center_of_trade value = 1 } }
			if = { limit = { check_variable = { which = trade_power value = 90 } } subtract_variable = { which = trade_power value = 90 } change_variable = { which = minor_center_of_trade value = 1 } }
			if = { limit = { check_variable = { which = trade_power value = 100 } } change_variable = { which = minor_center_of_trade value = 1 } }
			
			# Assign modifiers
			# log = "BEGIN: POP_shifting_trade.001"
			while = {
				limit = {
					check_variable = { which = minor_center_of_trade value = 1 }
				}
				#SCCs will always have -1 trade_power value
				set_variable = { which = trade_power value = -1 }
				
				# Find the province with highest trade power
				save_event_target_as = cur_max
				
				sr_effect = { effect=sr_shifting_2 }
				
				# Winner gets the modifier
				event_target:cur_max = {
					if = {
						limit = {
							PREV = { check_variable = { which = dominant_center_of_trade     value = 1 } }
						}
						set_province_flag = trade_center_modifier_has
						set_province_flag = trade_center_modifier_assigned
						
						PREV = { subtract_variable = { which = dominant_center_of_trade     value = 1 } }
						
						if = { limit = { NOT = { has_province_modifier = dominant_center_of_trade } }
							remove_center_of_trade = yes
							add_permanent_province_modifier = {
								name = dominant_center_of_trade
								duration = -1
							}
						}
					}
					else_if = {
						limit = {
							PREV = { check_variable = { which = major_center_of_trade        value = 1 } }
						}
						set_province_flag = trade_center_modifier_has
						set_province_flag = trade_center_modifier_assigned
						
						PREV = { subtract_variable = { which = major_center_of_trade     value = 1 } }
						
						if = { limit = { NOT = { has_province_modifier = major_center_of_trade } }
							remove_center_of_trade = yes
							add_permanent_province_modifier = {
								name = major_center_of_trade
								duration = -1
							}
						}
					}
					else_if = {
						limit = {
							PREV = { check_variable = { which = important_center_of_trade    value = 1 } }
						}
						set_province_flag = trade_center_modifier_has
						set_province_flag = trade_center_modifier_assigned
						
						PREV = { subtract_variable = { which = important_center_of_trade     value = 1 } }
						
						if = { limit = { NOT = { has_province_modifier = important_center_of_trade } }
							remove_center_of_trade = yes
							add_permanent_province_modifier = {
								name = important_center_of_trade
								duration = -1
							}
						}
					}
					else_if = {
						limit = {
							PREV = { check_variable = { which = minor_center_of_trade        value = 1 } }
						}
						set_province_flag = trade_center_modifier_has
						set_province_flag = trade_center_modifier_assigned
						
						PREV = { subtract_variable = { which = minor_center_of_trade     value = 1 } }
						
						if = { limit = { NOT = { has_province_modifier = minor_center_of_trade } }
							remove_center_of_trade = yes
							add_permanent_province_modifier = {
								name = minor_center_of_trade
								duration = -1
							}
						}
					}
				}
			}
			# log = "END: POP_shifting_trade.001"
		}
		
		regiongroup = {
			region = {
				limit = {
					is_city = yes
				}
				if = {
					limit = {
						has_province_flag = trade_center_modifier_has
						NOT = { has_province_flag = trade_center_modifier_assigned }
					}
					clr_province_flag = trade_center_modifier_has
						
					remove_center_of_trade = yes
				}
				clr_province_flag = trade_center_modifier_assigned
				
				set_variable = { which = trade_power			value = 0 }
			}
		}
		set_variable = { which = trade_power value = 0 }
	}
	
	option = {
		name = "POP_shifting_trade.001.a"
		ai_chance = { factor = 100 }
		
		country_event = {
			id = POP_shifting_trade.006
		}
	}
}

country_event = {
	id = POP_shifting_trade.006
	title = "POP_shifting_trade.006.t"
	desc = "POP_shifting_trade.006.d"
	picture = CITY_DEVELOPMENT_AU_eventPicture
	is_triggered_only = yes
	hidden = yes
	
	immediate = {
		srgroup = {
			set_variable = { which = urban_production_power value = 0 }
			
			sr_effect = { effect=sr_shifting_3 }
			
			divide_variable = { which = urban_production_power 			which = PREV }
			
			set_variable = { which = dominant_center_of_production    value = 0.1 }
			set_variable = { which = major_center_of_production       value = 0.1 }
			set_variable = { which = important_center_of_production   value = 0.1 }
			set_variable = { which = minor_center_of_production       value = 0.1 }
			
			### Calculations below are responsible for determining how many--- and of what caliber--- centers of production each sub-continent gets.  ###
			if = { limit = { check_variable = { which = urban_production_power value = 10 } }  subtract_variable = { which = urban_production_power value = 10 } change_variable = { which = minor_center_of_production value = 1 } }
			if = { limit = { check_variable = { which = urban_production_power value = 15 } }  subtract_variable = { which = urban_production_power value = 15 } change_variable = { which = minor_center_of_production value = 1 } }
			if = { limit = { check_variable = { which = urban_production_power value = 30 } }  subtract_variable = { which = urban_production_power value = 30 } change_variable = { which = important_center_of_production value = 1 } }
			if = { limit = { check_variable = { which = urban_production_power value = 20 } }  subtract_variable = { which = urban_production_power value = 20 } change_variable = { which = minor_center_of_production value = 1 } }
			if = { limit = { check_variable = { which = urban_production_power value = 20 } }  subtract_variable = { which = urban_production_power value = 20 } change_variable = { which = minor_center_of_production value = 1 } }
			if = { limit = { check_variable = { which = urban_production_power value = 60 } } subtract_variable = { which = urban_production_power value = 60 } change_variable = { which = major_center_of_production value = 1 } }
			if = { limit = { check_variable = { which = urban_production_power value = 30 } }  subtract_variable = { which = urban_production_power value = 30 } change_variable = { which = minor_center_of_production value = 1 } }
			if = { limit = { check_variable = { which = urban_production_power value = 50 } }  subtract_variable = { which = urban_production_power value = 50 } change_variable = { which = important_center_of_production value = 1 } }
			if = { limit = { check_variable = { which = urban_production_power value = 35 } }  subtract_variable = { which = urban_production_power value = 35 } change_variable = { which = minor_center_of_production value = 1 } }
			if = { limit = { check_variable = { which = urban_production_power value = 60 } }  subtract_variable = { which = urban_production_power value = 60 } change_variable = { which = important_center_of_production value = 1 } }
			if = { limit = { check_variable = { which = urban_production_power value = 40 } }  subtract_variable = { which = urban_production_power value = 40 } change_variable = { which = minor_center_of_production value = 1 } }
			if = { limit = { check_variable = { which = urban_production_power value = 40 } }  subtract_variable = { which = urban_production_power value = 40 } change_variable = { which = minor_center_of_production value = 1 } }
			if = { limit = { check_variable = { which = urban_production_power value = 180 } } subtract_variable = { which = urban_production_power value = 180 } change_variable = { which = dominant_center_of_production value = 1 } }
			if = { limit = { check_variable = { which = urban_production_power value = 80 } }  subtract_variable = { which = urban_production_power value = 80 } change_variable = { which = important_center_of_production value = 1 } }
			if = { limit = { check_variable = { which = urban_production_power value = 120 } } subtract_variable = { which = urban_production_power value = 120 } change_variable = { which = major_center_of_production value = 1 } }
			if = { limit = { check_variable = { which = urban_production_power value = 80 } }  change_variable = { which = minor_center_of_production value = 1 } }
		
			# log = "BEGIN: POP_shifting_trade.006"
			while = {
				limit = {
					check_variable = { which = minor_center_of_production value = 1 }
				}
				#SCCs will always have -1 production_power value
				set_variable = { which = urban_production_power value = -1 }
				
				# Find the province with highest production power
				save_event_target_as = cur_max
				
				sr_effect = { effect=sr_shifting_4 }
				
				# Winner gets the modifier
				event_target:cur_max = {
					if = {
						limit = {
							PREV = { check_variable = { which = dominant_center_of_production     value = 1 } }
						}
						set_province_flag = production_center_modifier_assigned
						set_province_flag = production_center_modifier_has
						
						PREV = { subtract_variable = { which = dominant_center_of_production     value = 1 } }
						
						if = { limit = { NOT = { has_province_modifier = dominant_center_of_production } }
							remove_center_of_production = yes
							add_permanent_province_modifier = {
								name = dominant_center_of_production
								duration = -1
							}
						}
					}
					else_if = {
						limit = {
							PREV = { check_variable = { which = major_center_of_production        value = 1 } }
						}
						set_province_flag = production_center_modifier_assigned
						set_province_flag = production_center_modifier_has
						
						PREV = { subtract_variable = { which = major_center_of_production     value = 1 } }
						
						if = { limit = { NOT = { has_province_modifier = major_center_of_production } }
							remove_center_of_production = yes
							add_permanent_province_modifier = {
								name = major_center_of_production
								duration = -1
							}
						}
					}
					else_if = {
						limit = {
							PREV = { check_variable = { which = important_center_of_production    value = 1 } }
						}
						set_province_flag = production_center_modifier_assigned
						set_province_flag = production_center_modifier_has
						
						PREV = { subtract_variable = { which = important_center_of_production     value = 1 } }
						
						if = { limit = { NOT = { has_province_modifier = important_center_of_production } }
							remove_center_of_production = yes
							add_permanent_province_modifier = {
								name = important_center_of_production
								duration = -1
							}
						}
					}
					else_if = {
						limit = {
							PREV = { check_variable = { which = minor_center_of_production        value = 1 } }
						}
						set_province_flag = production_center_modifier_assigned
						set_province_flag = production_center_modifier_has
						
						PREV = { subtract_variable = { which = minor_center_of_production     value = 1 } }
						
						if = { limit = { NOT = { has_province_modifier = minor_center_of_production } }
							remove_center_of_production = yes
							add_permanent_province_modifier = {
								name = minor_center_of_production
								duration = -1
							}
						}
					}
				}
			}
			# log = "END: POP_shifting_trade.006"
			
			set_variable = { which = urban_production_power			value = 0 }
		}
		
		regiongroup = {
			region = {
				limit = {
					is_city = yes
				}
				if = {
					limit = {
						has_province_flag = production_center_modifier_has
						NOT = { has_province_flag = production_center_modifier_assigned }
					}
					clr_province_flag = production_center_modifier_has
						
					remove_center_of_production = yes
				}
				clr_province_flag = production_center_modifier_assigned
			}
		}
		set_variable = { which = urban_production_power value = 0 }
	}
	
	option = {
		name = "POP_shifting_trade.006.a"
		ai_chance = { factor = 100 }
		
		country_event = {
			id = POP_shifting_trade.011
		}
	}
}

country_event = {
	id = POP_shifting_trade.011
	title = "POP_shifting_trade.011.t"
	desc = "POP_shifting_trade.011.d"
	picture = CITY_DEVELOPMENT_AU_eventPicture
	is_triggered_only = yes
	hidden = yes
	
	immediate = {
		regiongroup = {
			region = {
				limit = {
					is_city = yes
				}
				set_variable = { which = art_power_ticker                which = art_power }
			}
		}
		
		srgroup = {
			set_variable = { which = art_power_ticker     value = 0 } ### Total Trade power on the continent
			
			sr_effect = { effect=sr_shifting_5 }
			
			divide_variable = { which = art_power_ticker 			which = PREV }

			set_variable = { which = median_center_of_art    value = 0.1 } # Will determine number of dominant trade centers
			set_variable = { which = minor_center_of_art       value = 0.1 } # ''
			
			
			### Calculations below are responsible for determining how many--- and of what caliber--- centers of trade each sub-continent gets.  ###
			if = { limit = { check_variable = { which = art_power_ticker value = 10 } } subtract_variable = { which = art_power_ticker value = 10 } change_variable = { which = minor_center_of_art value = 1 } }
			if = { limit = { check_variable = { which = art_power_ticker value = 20 } } subtract_variable = { which = art_power_ticker value = 20 } change_variable = { which = median_center_of_art value = 1 } }
			if = { limit = { check_variable = { which = art_power_ticker value = 13 } } subtract_variable = { which = art_power_ticker value = 13 } change_variable = { which = minor_center_of_art value = 1 } }
			if = { limit = { check_variable = { which = art_power_ticker value = 16 } } subtract_variable = { which = art_power_ticker value = 16 } change_variable = { which = minor_center_of_art value = 1 } }
			if = { limit = { check_variable = { which = art_power_ticker value = 25 } } subtract_variable = { which = art_power_ticker value = 25 } change_variable = { which = median_center_of_art value = 1 } }
			if = { limit = { check_variable = { which = art_power_ticker value = 20 } } subtract_variable = { which = art_power_ticker value = 20 } change_variable = { which = minor_center_of_art value = 1 } }
			if = { limit = { check_variable = { which = art_power_ticker value = 30 } } subtract_variable = { which = art_power_ticker value = 30 } change_variable = { which = median_center_of_art value = 1 } }
			if = { limit = { check_variable = { which = art_power_ticker value = 25 } } subtract_variable = { which = art_power_ticker value = 25 } change_variable = { which = minor_center_of_art value = 1 } }
			if = { limit = { check_variable = { which = art_power_ticker value = 30 } } subtract_variable = { which = art_power_ticker value = 30 } change_variable = { which = minor_center_of_art value = 1 } }
			if = { limit = { check_variable = { which = art_power_ticker value = 40 } } subtract_variable = { which = art_power_ticker value = 40 } change_variable = { which = median_center_of_art value = 1 } }
			if = { limit = { check_variable = { which = art_power_ticker value = 40 } } change_variable = { which = minor_center_of_art value = 1 } }
			
			# log = "BEGIN: POP_shifting_trade.011"
			while = {
				limit = {
					check_variable = { which = minor_center_of_art value = 1 }
				}
				#SCCs will always have -1 art_power value
				set_variable = { which = art_power value = -1 }
				
				# Find the province with highest art power
				save_event_target_as = cur_max
				
				sr_effect = { effect=sr_shifting_6 }
				
				# Winner
				event_target:cur_max = {
					if = {
						limit = {
							PREV = { check_variable = { which = median_center_of_art     value = 1 } }
						}
						set_province_flag = art_center_modifier_assigned
						set_province_flag = has_art_center_modifier
						
						PREV = { subtract_variable = { which = median_center_of_art     value = 1 } }
						
						if = { limit = { NOT = { has_province_modifier = median_center_of_art } }
							remove_center_of_art = yes
							
							add_permanent_province_modifier = {
								name = median_center_of_art
								duration = -1
							}
						}
					}
					else_if = {
						limit = {
							PREV = { check_variable = { which = minor_center_of_art        value = 1 } }
						}
						set_province_flag = art_center_modifier_assigned
						set_province_flag = has_art_center_modifier
						
						PREV = { subtract_variable = { which = minor_center_of_art     value = 1 } }
						
						if = { limit = { NOT = { has_province_modifier = minor_center_of_art } }
							remove_center_of_art = yes
							
							add_permanent_province_modifier = {
								name = minor_center_of_art
								duration = -1
							}
						}
					}
				}
			}
			# log = "END: POP_shifting_trade.011"
			
			set_variable = { which = art_power_ticker     value = 0 }
			set_variable = { which = art_power value = 0 }
		}
		
		contgroup = {
			set_variable = { which = art_power value = 12 }
			
			save_event_target_as = cur_max
			
			cont_effect = { effect=cont_shifting_1 }
			
			event_target:cur_max = {
				if = {
					limit = {
						NOT = { province_id = PREV }
					}
					set_province_flag = art_center_modifier_assigned
					set_province_flag = has_art_center_modifier
					if = { limit = { NOT = { has_province_modifier = important_center_of_art } }
						remove_center_of_art = yes
						
						add_permanent_province_modifier = {
							name = important_center_of_art
							duration = -1
						}
					}
				}
			}
			
			set_variable = { which = art_power value = 0 }
		}
		
		regiongroup = {
			region = {
				limit = {
					is_city = yes
				}
				if = {
					limit = {
						has_province_flag = has_art_center_modifier
						NOT = { has_province_flag = art_center_modifier_assigned }
					}
					clr_province_flag = has_art_center_modifier
						
					remove_center_of_art = yes
				}
				clr_province_flag = art_center_modifier_assigned
			}
		}
		set_variable = { which = art_power_ticker value = 0 }
	}
	
	option = {
		name = "POP_shifting_trade.0011a"
		ai_chance = { factor = 100 }
	}
}

province_event = {
	id = POP_shifting_trade.900
	title = "POP_shifting_trade.900.t"
	desc = "POP_shifting_trade.900.d"
	picture = CITY_DEVELOPMENT_AU_eventPicture
	#is_triggered_only = no
	hidden = yes
	
	trigger = {
		has_province_modifier = gateway_to_islamic_trade
		owner = { NOT = { religion_group = muslim } }
	}
	
	mean_time_to_happen = { months = 1 }
	
	immediate = {
		remove_province_modifier = gateway_to_islamic_trade
	}
	
	option = {
		name = "POP_shifting_trade.900.a"
		ai_chance = { factor = 100 }
		
		
	}
}

province_event = {
	id = POP_shifting_trade.800
	title = "POP_shifting_trade.800.t"
	desc = "POP_shifting_trade.800.d"
	picture = CITY_DEVELOPMENT_AU_eventPicture
	is_triggered_only = yes
	hidden = yes
	
	
	
	immediate = {
		add_permanent_province_modifier = {
			name = gateway_to_islamic_trade
			duration = -1
		}
		
	}
	
	option = {
		name = "POP_shifting_trade.800.a"
		ai_chance = { factor = 100 }
		
		
	}
}